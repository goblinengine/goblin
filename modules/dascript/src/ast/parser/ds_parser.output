Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 51 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 389 conflicts: 2 shift/reduce
State 463 conflicts: 7 shift/reduce
State 652 conflicts: 3 reduce/reduce
State 669 conflicts: 2 shift/reduce
State 1033 conflicts: 6 shift/reduce
State 1035 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 require_module_name: "name"
   36                    | '%' require_module_name
   37                    | require_module_name '.' "name"
   38                    | require_module_name '/' "name"

   39 require_module: require_module_name is_public_module
   40               | require_module_name "as" "name" is_public_module

   41 is_public_module: %empty
   42                 | "public"

   43 expect_declaration: "expect" expect_list

   44 expect_list: expect_error
   45            | expect_list ',' expect_error

   46 expect_error: "integer constant"
   47             | "integer constant" ':' "integer constant"

   48 expression_label: "label" "integer constant" ':'

   49 expression_goto: "goto" "label" "integer constant"
   50                | "goto" expr

   51 elif_or_static_elif: "elif"
   52                    | "static_elif"

   53 expression_else: %empty
   54                | "else" expression_block
   55                | elif_or_static_elif expr expression_block expression_else

   56 if_or_static_if: "if"
   57                | "static_if"

   58 expression_else_one_liner: %empty

   59 $@2: %empty

   60 expression_else_one_liner: "else" $@2 expression_if_one_liner

   61 expression_if_one_liner: expr
   62                        | expression_return_no_pipe
   63                        | expression_yield_no_pipe
   64                        | expression_break
   65                        | expression_continue

   66 expression_if_then_else: if_or_static_if expr expression_block expression_else

   67 $@3: %empty

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   70 expression_unsafe: "unsafe" expression_block

   71 expression_while_loop: "while" expr expression_block

   72 expression_with: "with" expr expression_block

   73 $@4: %empty

   74 expression_with_alias: "assume" "name" '=' $@4 expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 annotation_declaration_name: name_in_namespace
   97                            | "require"
   98                            | "private"

   99 annotation_declaration: annotation_declaration_name
  100                       | annotation_declaration_name '(' annotation_argument_list ')'

  101 annotation_list: annotation_declaration
  102                | annotation_list ',' annotation_declaration

  103 optional_annotation_list: %empty
  104                         | '[' annotation_list ']'

  105 optional_function_argument_list: %empty
  106                                | '(' ')'
  107                                | '(' function_argument_list ')'

  108 optional_function_type: %empty
  109                       | ':' type_declaration

  110 function_name: "name"
  111              | "operator" '!'
  112              | "operator" '~'
  113              | "operator" "+="
  114              | "operator" "-="
  115              | "operator" "*="
  116              | "operator" "/="
  117              | "operator" "%="
  118              | "operator" "&="
  119              | "operator" "|="
  120              | "operator" "^="
  121              | "operator" "&&="
  122              | "operator" "||="
  123              | "operator" "^^="
  124              | "operator" "&&"
  125              | "operator" "||"
  126              | "operator" "^^"
  127              | "operator" '+'
  128              | "operator" '-'
  129              | "operator" '*'
  130              | "operator" '/'
  131              | "operator" '%'
  132              | "operator" '<'
  133              | "operator" '>'
  134              | "operator" ".."
  135              | "operator" "=="
  136              | "operator" "!="
  137              | "operator" "<="
  138              | "operator" ">="
  139              | "operator" '&'
  140              | "operator" '|'
  141              | "operator" '^'
  142              | "++" "operator"
  143              | "--" "operator"
  144              | "operator" "++"
  145              | "operator" "--"
  146              | "operator" "<<"
  147              | "operator" ">>"
  148              | "operator" "<<="
  149              | "operator" ">>="
  150              | "operator" "<<<"
  151              | "operator" ">>>"
  152              | "operator" "<<<="
  153              | "operator" ">>>="
  154              | "operator" '[' ']'
  155              | "operator" "?[" ']'
  156              | "operator" '.'
  157              | "operator" "?."
  158              | "operator" ":="
  159              | "operator" "delete"
  160              | "operator" "??"
  161              | "operator" "is"
  162              | "operator" "as"
  163              | "operator" '?' "as"
  164              | "bool"
  165              | "string"
  166              | "int"
  167              | "int2"
  168              | "int3"
  169              | "int4"
  170              | "uint"
  171              | "uint2"
  172              | "uint3"
  173              | "uint4"
  174              | "float"
  175              | "float2"
  176              | "float3"
  177              | "float4"
  178              | "range"
  179              | "urange"
  180              | "int64"
  181              | "uint64"
  182              | "double"
  183              | "int8"
  184              | "uint8"
  185              | "int16"
  186              | "uint16"

  187 global_function_declaration: optional_annotation_list "def" function_declaration

  188 optional_public_or_private_function: %empty
  189                                    | "private"
  190                                    | "public"

  191 function_declaration_header: function_name optional_function_argument_list optional_function_type

  192 $@5: %empty

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  194 expression_block: '{' expressions '}'
  195                 | '{' expressions '}' "finally" '{' expressions '}'

  196 expression_any: ';'
  197               | expr_pipe
  198               | expr_assign_pipe
  199               | expr_assign ';'
  200               | expression_delete ';'
  201               | expression_let
  202               | expression_while_loop
  203               | expression_unsafe
  204               | expression_with
  205               | expression_with_alias
  206               | expression_for_loop
  207               | expression_break ';'
  208               | expression_continue ';'
  209               | expression_return
  210               | expression_yield
  211               | expression_if_then_else
  212               | expression_try_catch
  213               | expression_label ';'
  214               | expression_goto ';'
  215               | "pass" ';'

  216 expressions: %empty
  217            | expressions expression_any
  218            | expressions error

  219 expr_pipe: expr_assign " <|" expr_block
  220          | "@ <|" expr_block
  221          | "@@ <|" expr_block

  222 name_in_namespace: "name"
  223                  | "name" "::" "name"
  224                  | "::" "name"

  225 expression_delete: "delete" expr
  226                  | "delete" "explicit" expr

  227 expr_new: "new" type_declaration
  228         | "new" type_declaration '(' ')'
  229         | "new" type_declaration '(' expr_list ')'
  230         | "new" make_decl

  231 expression_break: "break"

  232 expression_continue: "continue"

  233 expression_return_no_pipe: "return"
  234                          | "return" expr
  235                          | "return" "<-" expr

  236 expression_return: expression_return_no_pipe ';'
  237                  | "return" expr_pipe
  238                  | "return" "<-" expr_pipe

  239 expression_yield_no_pipe: "yield" expr
  240                         | "yield" "<-" expr

  241 expression_yield: expression_yield_no_pipe ';'
  242                 | "yield" expr_pipe
  243                 | "yield" "<-" expr_pipe

  244 expression_try_catch: "try" expression_block "recover" expression_block

  245 kwd_let: "let"
  246        | "var"

  247 expression_let: kwd_let let_variable_declaration

  248 $@6: %empty

  249 $@7: %empty

  250 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 expr

  251 $@8: %empty

  252 $@9: %empty

  253 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 expr

  254 $@10: %empty

  255 $@11: %empty

  256 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 expr

  257 $@12: %empty

  258 $@13: %empty

  259 expr_type_decl: "type" '<' $@12 type_declaration '>' $@13

  260 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  261               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  262               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  263 expr_list: expr
  264          | expr_list ',' expr

  265 block_or_simple_block: expression_block
  266                      | "=>" expr
  267                      | "=>" "<-" expr

  268 block_or_lambda: '$'
  269                | '@'
  270                | '@' '@'

  271 capture_entry: '&' "name"
  272              | '=' "name"
  273              | "<-" "name"
  274              | ":=" "name"

  275 capture_list: capture_entry
  276             | capture_list ',' capture_entry

  277 optional_capture_list: %empty
  278                      | "[[" capture_list ']' ']'

  279 expr_block: expression_block
  280           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  281 expr_numeric_const: "integer constant"
  282                   | "unsigned integer constant"
  283                   | "long integer constant"
  284                   | "unsigned long integer constant"
  285                   | "floating point constant"
  286                   | "double constant"

  287 expr_assign: expr
  288            | expr '=' expr
  289            | expr "<-" expr
  290            | expr ":=" expr
  291            | expr "&=" expr
  292            | expr "|=" expr
  293            | expr "^=" expr
  294            | expr "&&=" expr
  295            | expr "||=" expr
  296            | expr "^^=" expr
  297            | expr "+=" expr
  298            | expr "-=" expr
  299            | expr "*=" expr
  300            | expr "/=" expr
  301            | expr "%=" expr
  302            | expr "<<=" expr
  303            | expr ">>=" expr
  304            | expr "<<<=" expr
  305            | expr ">>>=" expr

  306 expr_assign_pipe: expr '=' "@ <|" expr
  307                 | expr '=' "@@ <|" expr
  308                 | expr "<-" "@ <|" expr
  309                 | expr "<-" "@@ <|" expr

  310 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'

  311 expr_method_call: expr "->" "name" '(' ')'
  312                 | expr "->" "name" '(' expr_list ')'

  313 func_addr_name: name_in_namespace
  314               | "$i" '(' expr ')'

  315 func_addr_expr: '@' '@' func_addr_name

  316 $@14: %empty

  317 $@15: %empty

  318 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 func_addr_name

  319 $@16: %empty

  320 $@17: %empty

  321 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name

  322 expr_field: expr '.' "name"
  323           | expr '.' '.' "name"

  324 $@18: %empty

  325 $@19: %empty

  326 expr_field: expr '.' $@18 error $@19

  327 expr: "null"
  328     | name_in_namespace
  329     | expr_numeric_const
  330     | expr_reader
  331     | string_builder
  332     | make_decl
  333     | "true"
  334     | "false"
  335     | expr_field
  336     | expr_mtag
  337     | '!' expr
  338     | '~' expr
  339     | '+' expr
  340     | '-' expr
  341     | expr "<<" expr
  342     | expr ">>" expr
  343     | expr "<<<" expr
  344     | expr ">>>" expr
  345     | expr '+' expr
  346     | expr '-' expr
  347     | expr '*' expr
  348     | expr '/' expr
  349     | expr '%' expr
  350     | expr '<' expr
  351     | expr '>' expr
  352     | expr "==" expr
  353     | expr "!=" expr
  354     | expr "<=" expr
  355     | expr ">=" expr
  356     | expr '&' expr
  357     | expr '|' expr
  358     | expr '^' expr
  359     | expr "&&" expr
  360     | expr "||" expr
  361     | expr "^^" expr
  362     | expr ".." expr
  363     | "++" expr
  364     | "--" expr
  365     | expr "++"
  366     | expr "--"
  367     | '(' expr ')'
  368     | expr '[' expr ']'
  369     | expr '.' '[' expr ']'
  370     | expr "?[" expr ']'
  371     | expr '.' "?[" expr ']'
  372     | expr "?." "name"
  373     | expr '.' "?." "name"
  374     | func_addr_expr
  375     | name_in_namespace '(' ')'
  376     | name_in_namespace '(' expr_list ')'
  377     | basic_type_declaration '(' ')'
  378     | basic_type_declaration '(' expr_list ')'
  379     | '*' expr
  380     | "deref" '(' expr ')'
  381     | "addr" '(' expr ')'
  382     | "generator" '<' type_declaration '>' optional_capture_list '(' ')'
  383     | "generator" '<' type_declaration '>' optional_capture_list '(' expr ')'
  384     | expr "??" expr
  385     | expr '?' expr ':' expr

  386 $@20: %empty

  387 $@21: %empty

  388 expr: expr "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr "is" basic_type_declaration
  390     | expr "is" "name"
  391     | expr "as" "name"

  392 $@22: %empty

  393 $@23: %empty

  394 expr: expr "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr "as" basic_type_declaration
  396     | expr '?' "as" "name"

  397 $@24: %empty

  398 $@25: %empty

  399 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr '?' "as" basic_type_declaration
  401     | expr_type_info
  402     | expr_type_decl
  403     | expr_cast
  404     | expr_new
  405     | expr_method_call
  406     | expr_named_call
  407     | expr_block
  408     | expr "<|" expr
  409     | expr "|>" expr
  410     | name_in_namespace "name"
  411     | "unsafe" '(' expr ')'

  412 expr_mtag: "$$" '(' expr ')'
  413          | "$i" '(' expr ')'
  414          | "$v" '(' expr ')'
  415          | "$b" '(' expr ')'
  416          | "$a" '(' expr ')'
  417          | "$c" '(' expr ')' '(' ')'
  418          | "$c" '(' expr ')' '(' expr_list ')'
  419          | expr '.' "$f" '(' expr ')'
  420          | expr "?." "$f" '(' expr ')'
  421          | expr '.' '.' "$f" '(' expr ')'
  422          | expr '.' "?." "$f" '(' expr ')'
  423          | expr "as" "$f" '(' expr ')'
  424          | expr '?' "as" "$f" '(' expr ')'
  425          | expr "is" "$f" '(' expr ')'
  426          | '@' '@' "$c" '(' expr ')'

  427 optional_field_annotation: %empty
  428                          | "[[" annotation_argument_list ']' ']'

  429 optional_override: %empty
  430                  | "override"
  431                  | "sealed"

  432 optional_constant: %empty
  433                  | "const"

  434 optional_public_or_private_member_variable: %empty
  435                                           | "public"
  436                                           | "private"

  437 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration

  438 struct_variable_declaration_list: %empty

  439 $@26: %empty

  440 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration ';'

  441 $@27: %empty

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'

  443 $@28: %empty

  444 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block
  445                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  446 function_argument_declaration: optional_field_annotation variable_declaration
  447                              | optional_field_annotation "var" variable_declaration
  448                              | "$a" '(' expr ')'

  449 function_argument_list: function_argument_declaration
  450                       | function_argument_list ';' function_argument_declaration

  451 tuple_type: type_declaration
  452           | "name" ':' type_declaration

  453 tuple_type_list: tuple_type
  454                | tuple_type_list ';' tuple_type

  455 variant_type: "name" ':' type_declaration

  456 variant_type_list: variant_type
  457                  | variant_type_list ';' variant_type

  458 copy_or_move: '='
  459             | "<-"

  460 variable_declaration: variable_name_with_pos_list
  461                     | variable_name_with_pos_list '&'
  462                     | variable_name_with_pos_list ':' type_declaration
  463                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  464                     | variable_name_with_pos_list copy_or_move expr
  465                     | variable_name_with_pos_list copy_or_move expr_pipe

  466 copy_or_move_or_clone: '='
  467                      | "<-"
  468                      | ":="

  469 optional_ref: %empty
  470             | '&'

  471 let_variable_name_with_pos_list: "name"
  472                                | "$i" '(' expr ')'
  473                                | "name" "aka" "name"
  474                                | let_variable_name_with_pos_list ',' "name"
  475                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  476 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';'
  477                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';'
  478                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe
  479                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  480                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  481 global_variable_declaration_list: %empty

  482 $@29: %empty

  483 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation let_variable_declaration

  484 optional_shared: %empty
  485                | "shared"

  486 optional_public_or_private_variable: %empty
  487                                    | "private"
  488                                    | "public"

  489 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  490 $@30: %empty

  491 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

  492 enum_list: %empty
  493          | enum_list "name" ';'
  494          | enum_list "name" '=' expr ';'

  495 $@31: %empty

  496 single_alias: "name" $@31 '=' type_declaration

  497 alias_list: single_alias ';'
  498           | alias_list single_alias ';'

  499 alias_declaration: "typedef" '{' alias_list '}'
  500                  | "typedef" single_alias

  501 optional_public_or_private_enum: %empty
  502                                | "private"
  503                                | "public"

  504 enum_name: "name"

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  506                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  507 optional_structure_parent: %empty
  508                          | ':' name_in_namespace

  509 optional_sealed: %empty
  510                | "sealed"

  511 structure_name: optional_sealed "name" optional_structure_parent

  512 class_or_struct: "class"
  513                | "struct"

  514 optional_public_or_private_structure: %empty
  515                                     | "private"
  516                                     | "public"

  517 $@32: %empty

  518 $@33: %empty

  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

  520 variable_name_with_pos_list: "name"
  521                            | "$i" '(' expr ')'
  522                            | "name" "aka" "name"
  523                            | variable_name_with_pos_list ',' "name"
  524                            | variable_name_with_pos_list ',' "name" "aka" "name"

  525 basic_type_declaration: "bool"
  526                       | "string"
  527                       | "int"
  528                       | "int8"
  529                       | "int16"
  530                       | "int64"
  531                       | "int2"
  532                       | "int3"
  533                       | "int4"
  534                       | "uint"
  535                       | "uint8"
  536                       | "uint16"
  537                       | "uint64"
  538                       | "uint2"
  539                       | "uint3"
  540                       | "uint4"
  541                       | "float"
  542                       | "float2"
  543                       | "float3"
  544                       | "float4"
  545                       | "void"
  546                       | "range"
  547                       | "urange"
  548                       | "double"
  549                       | "bitfield"

  550 enum_basic_type_declaration: "int"
  551                            | "int8"
  552                            | "int16"
  553                            | "uint"
  554                            | "uint8"
  555                            | "uint16"

  556 structure_type_declaration: name_in_namespace

  557 auto_type_declaration: "auto"
  558                      | "auto" '(' "name" ')'
  559                      | "$t" '(' expr ')'

  560 bitfield_bits: "name"
  561              | bitfield_bits ';' "name"

  562 $@34: %empty

  563 $@35: %empty

  564 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  565 table_type_pair: type_declaration
  566                | type_declaration ';' type_declaration

  567 type_declaration: basic_type_declaration
  568                 | auto_type_declaration
  569                 | bitfield_type_declaration
  570                 | structure_type_declaration
  571                 | type_declaration '[' expr ']'
  572                 | type_declaration '[' ']'
  573                 | type_declaration '-' '[' ']'
  574                 | type_declaration "explicit"
  575                 | type_declaration "const"
  576                 | type_declaration '-' "const"
  577                 | type_declaration '&'
  578                 | type_declaration '-' '&'
  579                 | type_declaration '#'
  580                 | type_declaration "implicit"
  581                 | type_declaration '-' '#'
  582                 | type_declaration '=' "const"
  583                 | type_declaration '?'

  584 $@36: %empty

  585 $@37: %empty

  586 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' $@37
  587                 | type_declaration "??"

  588 $@38: %empty

  589 $@39: %empty

  590 type_declaration: "array" '<' $@38 type_declaration '>' $@39

  591 $@40: %empty

  592 $@41: %empty

  593 type_declaration: "table" '<' $@40 table_type_pair '>' $@41

  594 $@42: %empty

  595 $@43: %empty

  596 type_declaration: "iterator" '<' $@42 type_declaration '>' $@43
  597                 | "block"

  598 $@44: %empty

  599 $@45: %empty

  600 type_declaration: "block" '<' $@44 type_declaration '>' $@45

  601 $@46: %empty

  602 $@47: %empty

  603 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' $@47
  604                 | "function"

  605 $@48: %empty

  606 $@49: %empty

  607 type_declaration: "function" '<' $@48 type_declaration '>' $@49

  608 $@50: %empty

  609 $@51: %empty

  610 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' $@51
  611                 | "lambda"

  612 $@52: %empty

  613 $@53: %empty

  614 type_declaration: "lambda" '<' $@52 type_declaration '>' $@53

  615 $@54: %empty

  616 $@55: %empty

  617 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' $@55

  618 $@56: %empty

  619 $@57: %empty

  620 type_declaration: "tuple" '<' $@56 tuple_type_list '>' $@57

  621 $@58: %empty

  622 $@59: %empty

  623 type_declaration: "variant" '<' $@58 variant_type_list '>' $@59

  624 $@60: %empty

  625 $@61: %empty

  626 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' '}'

  627 $@62: %empty

  628 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' '}'

  629 make_decl: make_struct_decl
  630          | make_dim_decl
  631          | make_table_decl
  632          | array_comprehension

  633 make_struct_fields: "name" copy_or_move expr
  634                   | "name" ":=" expr
  635                   | make_struct_fields ',' "name" copy_or_move expr
  636                   | make_struct_fields ',' "name" ":=" expr

  637 make_struct_dim: make_struct_fields
  638                | make_struct_dim ';' make_struct_fields

  639 optional_block: %empty
  640               | "where" expr_block

  641 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']'
  642                 | "[[" type_declaration optional_block ']' ']'
  643                 | "[[" type_declaration '(' ')' optional_block ']' ']'
  644                 | "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  645                 | "[{" type_declaration make_struct_dim optional_block '}' ']'
  646                 | "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']'

  647 make_tuple: expr
  648           | make_tuple ',' expr

  649 make_map_tuple: expr "=>" expr
  650               | expr

  651 make_any_tuple: make_tuple
  652               | make_map_tuple

  653 make_dim: make_any_tuple
  654         | make_dim ';' make_any_tuple

  655 make_dim_decl: "[[" type_declaration make_dim ']' ']'
  656              | "[{" type_declaration make_dim '}' ']'

  657 make_table: make_map_tuple
  658           | make_table ';' make_map_tuple

  659 make_table_decl: "{{" make_table '}' '}'

  660 array_comprehension_where: %empty
  661                          | ';' "where" expr

  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  663                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 337
    '#' (35) 579 581
    '$' (36) 17 268
    '%' (37) 32 36 131 349
    '&' (38) 139 271 356 461 470 577 578
    '(' (40) 93 100 106 107 228 229 260 261 262 310 311 312 314 367 375 376 377 378 380 381 382 383 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 448 472 521 558 559 643 644 646
    ')' (41) 93 100 106 107 228 229 260 261 262 310 311 312 314 367 375 376 377 378 380 381 382 383 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 448 472 521 558 559 643 644 646
    '*' (42) 129 347 379
    '+' (43) 127 339 345
    ',' (44) 45 82 95 102 264 276 474 475 523 524 635 636 648
    '-' (45) 128 340 346 573 576 578 581
    '.' (46) 37 156 322 323 326 369 371 373 419 421 422
    '/' (47) 38 130 348
    ':' (58) 47 48 109 385 452 455 462 463 476 477 478 506 508
    ';' (59) 13 68 69 196 199 200 207 208 213 214 215 236 241 262 440 442 445 450 454 457 476 477 479 493 494 497 498 561 566 626 628 638 654 658 661 662 663
    '<' (60) 132 250 253 256 259 261 262 318 321 350 382 383 388 394 399 564 586 590 593 596 600 603 607 610 614 617 620 623
    '=' (61) 74 86 87 88 89 90 91 93 272 288 306 307 458 466 494 496 582
    '>' (62) 133 250 253 256 259 261 262 318 321 351 382 383 388 394 399 564 586 590 593 596 600 603 607 610 614 617 620 623
    '?' (63) 163 385 396 399 400 424 583
    '@' (64) 269 270 315 318 321 426
    '[' (91) 104 154 310 368 369 445 571 572 573
    ']' (93) 104 154 155 278 310 368 369 370 371 428 445 571 572 573 641 642 643 644 645 646 655 656 662 663
    '^' (94) 141 358
    '{' (123) 194 195 489 499 505 506 519 626 628
    '|' (124) 140 357
    '}' (125) 194 195 489 499 505 506 519 626 628 645 646 656 659 663
    '~' (126) 112 338
    error (256) 218 326
    "lexer error" (258)
    "struct" (259) 513
    "class" (260) 512
    "let" (261) 245
    "def" (262) 187 442 444
    "while" (263) 71
    "if" (264) 56 68
    "static_if" (265) 57
    "else" (266) 54 60
    "for" (267) 69 662 663
    "recover" (268) 244
    "true" (269) 79 90 333
    "false" (270) 80 91 334
    "new" (271) 227 228 229 230
    "typeinfo" (272) 260 261 262
    "type" (273) 84 259 388 394 399
    "in" (274) 69 85 662 663
    "is" (275) 161 388 389 390 425
    "as" (276) 40 162 163 391 394 395 396 399 400 423 424
    "elif" (277) 51
    "static_elif" (278) 52
    "array" (279) 590
    "return" (280) 233 234 235 237 238
    "null" (281) 327
    "break" (282) 231
    "try" (283) 244
    "options" (284) 33
    "table" (285) 593
    "expect" (286) 43
    "const" (287) 433 575 576 582
    "require" (288) 34 97
    "operator" (289) 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
    "enum" (290) 505 506
    "finally" (291) 195
    "delete" (292) 159 225 226
    "deref" (293) 380
    "typedef" (294) 499 500
    "with" (295) 72
    "aka" (296) 473 475 522 524
    "assume" (297) 74
    "cast" (298) 250
    "override" (299) 430
    "abstract" (300) 442
    "upcast" (301) 253
    "iterator" (302) 596
    "var" (303) 246 447
    "addr" (304) 381
    "continue" (305) 232
    "where" (306) 640 661
    "pass" (307) 215
    "reinterpret" (308) 256
    "module" (309) 19
    "public" (310) 15 42 190 435 488 503 516
    "label" (311) 48 49
    "goto" (312) 49 50
    "implicit" (313) 580
    "explicit" (314) 226 574
    "shared" (315) 485
    "private" (316) 16 98 189 436 487 502 515
    "smart_ptr" (317) 586
    "unsafe" (318) 70 411
    "bool" (319) 164 525
    "void" (320) 545
    "string" (321) 165 526
    "auto" (322) 557 558
    "int" (323) 166 527 550
    "int2" (324) 167 531
    "int3" (325) 168 532
    "int4" (326) 169 533
    "uint" (327) 170 534 553
    "bitfield" (328) 549 564 628
    "uint2" (329) 171 538
    "uint3" (330) 172 539
    "uint4" (331) 173 540
    "float" (332) 174 541
    "float2" (333) 175 542
    "float3" (334) 176 543
    "float4" (335) 177 544
    "range" (336) 178 546
    "urange" (337) 179 547
    "block" (338) 597 600 603
    "int64" (339) 180 530
    "uint64" (340) 181 537
    "double" (341) 182 548
    "function" (342) 604 607 610
    "lambda" (343) 611 614 617
    "int8" (344) 183 528 551
    "uint8" (345) 184 535 554
    "int16" (346) 185 529 552
    "uint16" (347) 186 536 555
    "tuple" (348) 620
    "variant" (349) 623 626
    "generator" (350) 382 383
    "yield" (351) 239 240 242 243
    "sealed" (352) 431 510
    "+=" (353) 113 297
    "-=" (354) 114 298
    "/=" (355) 116 300
    "*=" (356) 115 299
    "%=" (357) 117 301
    "&=" (358) 118 291
    "|=" (359) 119 292
    "^=" (360) 120 293
    "<<" (361) 146 341
    ">>" (362) 147 342
    "++" (363) 142 144 363 365
    "--" (364) 143 145 364 366
    "<=" (365) 137 354
    "<<=" (366) 148 302
    ">>=" (367) 149 303
    ">=" (368) 138 355
    "==" (369) 135 352
    "!=" (370) 136 353
    "->" (371) 311 312
    "<-" (372) 235 238 240 243 267 273 289 308 309 459 467
    "??" (373) 160 384 587
    "?." (374) 157 372 373 420 422
    "?[" (375) 155 370 371
    "<|" (376) 408
    " <|" (377) 219
    "@ <|" (378) 220 306 308
    "@@ <|" (379) 221 307 309
    "|>" (380) 409
    ":=" (381) 158 274 290 468 634 636
    "<<<" (382) 150 343
    ">>>" (383) 151 344
    "<<<=" (384) 152 304
    ">>>=" (385) 153 305
    "=>" (386) 266 267 649
    "::" (387) 223 224
    "&&" (388) 124 359
    "||" (389) 125 360
    "^^" (390) 126 361
    "&&=" (391) 121 294
    "||=" (392) 122 295
    "^^=" (393) 123 296
    ".." (394) 134 362
    "$$" (395) 412
    "$i" (396) 314 413 472 521
    "$v" (397) 414
    "$b" (398) 415
    "$a" (399) 416 448
    "$t" (400) 559
    "$c" (401) 417 418 426
    "$f" (402) 419 420 421 422 423 424 425
    "[[" (403) 278 428 641 642 643 644 655 662
    "[{" (404) 645 646 656 663
    "{{" (405) 659
    "integer constant" <i> (406) 46 47 48 49 77 88 281
    "long integer constant" <i64> (407) 283
    "unsigned integer constant" <ui> (408) 282
    "unsigned long integer constant" <ui64> (409) 284
    "floating point constant" <fd> (410) 78 89 285
    "double constant" <d> (411) 286
    "name" <s> (412) 18 35 37 38 40 74 76 83 87 110 222 223 224 261 262 271 272 273 274 311 312 322 323 372 373 390 391 396 410 452 455 471 473 474 475 493 494 496 504 511 520 522 523 524 558 560 561 626 628 633 634 635 636
    "start of the string" (413) 24 28
    STRING_CHARACTER <ch> (414) 20 22 29 30
    STRING_CHARACTER_ESC (415) 21 23
    "end of the string" (416) 24 28
    "{" (417) 27
    "}" (418) 27
    "end of failed eader macro" (419)
    UNARY_MINUS (420)
    UNARY_PLUS (421)
    PRE_INC (422)
    PRE_DEC (423)
    POST_INC (424)
    POST_DEC (425)
    DEREF (426)


Nonterminals, with rules where they appear

    $accept (199)
        on left: 0
    program (200)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (201)
        on left: 14 15 16
        on right: 19
    module_name <s> (202)
        on left: 17 18
        on right: 19
    module_declaration (203)
        on left: 19
        on right: 2
    character_sequence <s> (204)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (205)
        on left: 24
        on right: 75 86
    string_builder_body <pExpression> (206)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (207)
        on left: 28
        on right: 331
    reader_character_sequence (208)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (209)
        on left: 32
        on right: 330
    $@1 (210)
        on left: 31
        on right: 32
    options_declaration (211)
        on left: 33
        on right: 9
    require_declaration (212)
        on left: 34
        on right: 8
    require_module_name <s> (213)
        on left: 35 36 37 38
        on right: 36 37 38 39 40
    require_module (214)
        on left: 39 40
        on right: 34
    is_public_module <b> (215)
        on left: 41 42
        on right: 39 40
    expect_declaration (216)
        on left: 43
        on right: 7
    expect_list (217)
        on left: 44 45
        on right: 43 45
    expect_error (218)
        on left: 46 47
        on right: 44 45
    expression_label <pExpression> (219)
        on left: 48
        on right: 213
    expression_goto <pExpression> (220)
        on left: 49 50
        on right: 214
    elif_or_static_elif <b> (221)
        on left: 51 52
        on right: 55
    expression_else <pExpression> (222)
        on left: 53 54 55
        on right: 55 66
    if_or_static_if <b> (223)
        on left: 56 57
        on right: 66
    expression_else_one_liner <pExpression> (224)
        on left: 58 60
        on right: 68
    $@2 (225)
        on left: 59
        on right: 60
    expression_if_one_liner <pExpression> (226)
        on left: 61 62 63 64 65
        on right: 60 68
    expression_if_then_else <pExpression> (227)
        on left: 66 68
        on right: 211
    $@3 (228)
        on left: 67
        on right: 68
    expression_for_loop <pExpression> (229)
        on left: 69
        on right: 206
    expression_unsafe <pExpression> (230)
        on left: 70
        on right: 203
    expression_while_loop <pExpression> (231)
        on left: 71
        on right: 202
    expression_with <pExpression> (232)
        on left: 72
        on right: 204
    expression_with_alias <pExpression> (233)
        on left: 74
        on right: 205
    $@4 (234)
        on left: 73
        on right: 74
    annotation_argument_value <aa> (235)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (236)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (237)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (238)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95
    annotation_argument_list <aaList> (239)
        on left: 94 95
        on right: 33 95 100 428
    annotation_declaration_name <s> (240)
        on left: 96 97 98
        on right: 99 100
    annotation_declaration <fa> (241)
        on left: 99 100
        on right: 101 102
    annotation_list <faList> (242)
        on left: 101 102
        on right: 102 104 445
    optional_annotation_list <faList> (243)
        on left: 103 104
        on right: 187 280 442 444 505 506 519
    optional_function_argument_list <pVarDeclList> (244)
        on left: 105 106 107
        on right: 191 280 321 603 610 617
    optional_function_type <pTypeDecl> (245)
        on left: 108 109
        on right: 191 280 321 603 610 617
    function_name <s> (246)
        on left: 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186
        on right: 191
    global_function_declaration (247)
        on left: 187
        on right: 6
    optional_public_or_private_function <b> (248)
        on left: 188 189 190
        on right: 193
    function_declaration_header <pFuncDecl> (249)
        on left: 191
        on right: 193 442 444
    function_declaration <pFuncDecl> (250)
        on left: 193
        on right: 187
    $@5 (251)
        on left: 192
        on right: 193
    expression_block <pExpression> (252)
        on left: 194 195
        on right: 54 55 66 69 70 71 72 193 244 265 279 444
    expression_any <pExpression> (253)
        on left: 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
        on right: 217
    expressions <pExpression> (254)
        on left: 216 217 218
        on right: 194 195 217 218
    expr_pipe <pExpression> (255)
        on left: 219 220 221
        on right: 197 237 238 242 243 465 478 480
    name_in_namespace <s> (256)
        on left: 222 223 224
        on right: 32 96 260 261 262 310 313 328 375 376 410 508 556
    expression_delete <pExpression> (257)
        on left: 225 226
        on right: 200
    expr_new <pExpression> (258)
        on left: 227 228 229 230
        on right: 404
    expression_break <pExpression> (259)
        on left: 231
        on right: 64 207
    expression_continue <pExpression> (260)
        on left: 232
        on right: 65 208
    expression_return_no_pipe <pExpression> (261)
        on left: 233 234 235
        on right: 62 236
    expression_return <pExpression> (262)
        on left: 236 237 238
        on right: 209
    expression_yield_no_pipe <pExpression> (263)
        on left: 239 240
        on right: 63 241
    expression_yield <pExpression> (264)
        on left: 241 242 243
        on right: 210
    expression_try_catch <pExpression> (265)
        on left: 244
        on right: 212
    kwd_let <b> (266)
        on left: 245 246
        on right: 247 489 491
    expression_let <pExpression> (267)
        on left: 247
        on right: 201
    expr_cast <pExpression> (268)
        on left: 250 253 256
        on right: 403
    $@6 (269)
        on left: 248
        on right: 250
    $@7 (270)
        on left: 249
        on right: 250
    $@8 (271)
        on left: 251
        on right: 253
    $@9 (272)
        on left: 252
        on right: 253
    $@10 (273)
        on left: 254
        on right: 256
    $@11 (274)
        on left: 255
        on right: 256
    expr_type_decl <pExpression> (275)
        on left: 259
        on right: 402
    $@12 (276)
        on left: 257
        on right: 259
    $@13 (277)
        on left: 258
        on right: 259
    expr_type_info <pExpression> (278)
        on left: 260 261 262
        on right: 401
    expr_list <pExpression> (279)
        on left: 263 264
        on right: 69 229 264 312 376 378 418 662 663
    block_or_simple_block <pExpression> (280)
        on left: 265 266 267
        on right: 280
    block_or_lambda <i> (281)
        on left: 268 269 270
        on right: 280
    capture_entry <pCapt> (282)
        on left: 271 272 273 274
        on right: 275 276
    capture_list <pCaptList> (283)
        on left: 275 276
        on right: 276 278
    optional_capture_list <pCaptList> (284)
        on left: 277 278
        on right: 280 382 383
    expr_block <pExpression> (285)
        on left: 279 280
        on right: 219 220 221 407 640
    expr_numeric_const <pExpression> (286)
        on left: 281 282 283 284 285 286
        on right: 329
    expr_assign <pExpression> (287)
        on left: 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
        on right: 199 219
    expr_assign_pipe <pExpression> (288)
        on left: 306 307 308 309
        on right: 198
    expr_named_call <pExpression> (289)
        on left: 310
        on right: 406
    expr_method_call <pExpression> (290)
        on left: 311 312
        on right: 405
    func_addr_name <pExpression> (291)
        on left: 313 314
        on right: 315 318 321
    func_addr_expr <pExpression> (292)
        on left: 315 318 321
        on right: 374
    $@14 (293)
        on left: 316
        on right: 318
    $@15 (294)
        on left: 317
        on right: 318
    $@16 (295)
        on left: 319
        on right: 321
    $@17 (296)
        on left: 320
        on right: 321
    expr_field <pExpression> (297)
        on left: 322 323 326
        on right: 335
    $@18 (298)
        on left: 324
        on right: 326
    $@19 (299)
        on left: 325
        on right: 326
    expr <pExpression> (300)
        on left: 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 388 389 390 391 394 395 396 399 400 401 402 403 404 405 406 407 408 409 410 411
        on right: 27 50 55 61 66 68 71 72 74 225 226 234 235 239 240 250 253 256 260 261 262 263 264 266 267 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 311 312 314 322 323 326 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 379 380 381 383 384 385 388 389 390 391 394 395 396 399 400 408 409 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 448 463 464 472 477 479 494 521 559 571 633 634 635 636 647 648 649 650 661 662 663
    $@20 (301)
        on left: 386
        on right: 388
    $@21 (302)
        on left: 387
        on right: 388
    $@22 (303)
        on left: 392
        on right: 394
    $@23 (304)
        on left: 393
        on right: 394
    $@24 (305)
        on left: 397
        on right: 399
    $@25 (306)
        on left: 398
        on right: 399
    expr_mtag <pExpression> (307)
        on left: 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426
        on right: 336
    optional_field_annotation <aaList> (308)
        on left: 427 428
        on right: 437 446 447 483 491
    optional_override <i> (309)
        on left: 429 430 431
        on right: 437 444
    optional_constant <b> (310)
        on left: 432 433
        on right: 444
    optional_public_or_private_member_variable <b> (311)
        on left: 434 435 436
        on right: 437 442 444
    structure_variable_declaration <pVarDecl> (312)
        on left: 437
        on right: 440
    struct_variable_declaration_list <pVarDeclList> (313)
        on left: 438 440 442 444 445
        on right: 440 442 444 445 519
    $@26 (314)
        on left: 439
        on right: 440
    $@27 (315)
        on left: 441
        on right: 442
    $@28 (316)
        on left: 443
        on right: 444
    function_argument_declaration <pVarDecl> (317)
        on left: 446 447 448
        on right: 449 450
    function_argument_list <pVarDeclList> (318)
        on left: 449 450
        on right: 107 450
    tuple_type <pVarDecl> (319)
        on left: 451 452
        on right: 453 454
    tuple_type_list <pVarDeclList> (320)
        on left: 453 454
        on right: 454 620
    variant_type <pVarDecl> (321)
        on left: 455
        on right: 456 457
    variant_type_list <pVarDeclList> (322)
        on left: 456 457
        on right: 457 623 626
    copy_or_move <b> (323)
        on left: 458 459
        on right: 463 464 465 633 635
    variable_declaration <pVarDecl> (324)
        on left: 460 461 462 463 464 465
        on right: 437 446 447
    copy_or_move_or_clone <i> (325)
        on left: 466 467 468
        on right: 477 478 479 480
    optional_ref <b> (326)
        on left: 469 470
        on right: 479 480
    let_variable_name_with_pos_list <pNameWithPosList> (327)
        on left: 471 472 473 474 475
        on right: 474 475 476 477 478 479 480
    let_variable_declaration <pVarDecl> (328)
        on left: 476 477 478 479 480
        on right: 247 483 491
    global_variable_declaration_list <pVarDeclList> (329)
        on left: 481 483
        on right: 483 489
    $@29 (330)
        on left: 482
        on right: 483
    optional_shared <b> (331)
        on left: 484 485
        on right: 19 489 491
    optional_public_or_private_variable <b> (332)
        on left: 486 487 488
        on right: 489 491
    global_let (333)
        on left: 489 491
        on right: 5
    $@30 (334)
        on left: 490
        on right: 491
    enum_list <pEnum> (335)
        on left: 492 493 494
        on right: 493 494 505 506
    single_alias (336)
        on left: 496
        on right: 497 498 500
    $@31 (337)
        on left: 495
        on right: 496
    alias_list (338)
        on left: 497 498
        on right: 498 499
    alias_declaration (339)
        on left: 499 500
        on right: 10
    optional_public_or_private_enum <b> (340)
        on left: 501 502 503
        on right: 505 506
    enum_name <pEnum> (341)
        on left: 504
        on right: 505 506
    enum_declaration (342)
        on left: 505 506
        on right: 4
    optional_structure_parent <s> (343)
        on left: 507 508
        on right: 511
    optional_sealed <b> (344)
        on left: 509 510
        on right: 511
    structure_name <pStructure> (345)
        on left: 511
        on right: 519
    class_or_struct <b> (346)
        on left: 512 513
        on right: 519
    optional_public_or_private_structure <b> (347)
        on left: 514 515 516
        on right: 519
    structure_declaration (348)
        on left: 519
        on right: 3
    $@32 (349)
        on left: 517
        on right: 519
    $@33 (350)
        on left: 518
        on right: 519
    variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 520 521 522 523 524
        on right: 69 460 461 462 463 464 465 523 524 662 663
    basic_type_declaration <type> (352)
        on left: 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549
        on right: 377 378 389 395 400 567
    enum_basic_type_declaration <type> (353)
        on left: 550 551 552 553 554 555
        on right: 506
    structure_type_declaration <pTypeDecl> (354)
        on left: 556
        on right: 570
    auto_type_declaration <pTypeDecl> (355)
        on left: 557 558 559
        on right: 568
    bitfield_bits <pNameList> (356)
        on left: 560 561
        on right: 561 564 628
    bitfield_type_declaration <pTypeDecl> (357)
        on left: 564
        on right: 569
    $@34 (358)
        on left: 562
        on right: 564
    $@35 (359)
        on left: 563
        on right: 564
    table_type_pair <aTypePair> (360)
        on left: 565 566
        on right: 593
    type_declaration <pTypeDecl> (361)
        on left: 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 586 587 590 593 596 597 600 603 604 607 610 611 614 617 620 623
        on right: 109 227 228 229 250 253 256 259 318 382 383 388 394 399 451 452 455 462 463 476 477 478 496 565 566 571 572 573 574 575 576 577 578 579 580 581 582 583 586 587 590 596 600 607 614 641 642 643 644 645 646 655 656
    $@36 (362)
        on left: 584
        on right: 586
    $@37 (363)
        on left: 585
        on right: 586
    $@38 (364)
        on left: 588
        on right: 590
    $@39 (365)
        on left: 589
        on right: 590
    $@40 (366)
        on left: 591
        on right: 593
    $@41 (367)
        on left: 592
        on right: 593
    $@42 (368)
        on left: 594
        on right: 596
    $@43 (369)
        on left: 595
        on right: 596
    $@44 (370)
        on left: 598
        on right: 600
    $@45 (371)
        on left: 599
        on right: 600
    $@46 (372)
        on left: 601
        on right: 603
    $@47 (373)
        on left: 602
        on right: 603
    $@48 (374)
        on left: 605
        on right: 607
    $@49 (375)
        on left: 606
        on right: 607
    $@50 (376)
        on left: 608
        on right: 610
    $@51 (377)
        on left: 609
        on right: 610
    $@52 (378)
        on left: 612
        on right: 614
    $@53 (379)
        on left: 613
        on right: 614
    $@54 (380)
        on left: 615
        on right: 617
    $@55 (381)
        on left: 616
        on right: 617
    $@56 (382)
        on left: 618
        on right: 620
    $@57 (383)
        on left: 619
        on right: 620
    $@58 (384)
        on left: 621
        on right: 623
    $@59 (385)
        on left: 622
        on right: 623
    variant_alias_declaration (386)
        on left: 626
        on right: 11
    $@60 (387)
        on left: 624
        on right: 626
    $@61 (388)
        on left: 625
        on right: 626
    bitfield_alias_declaration (389)
        on left: 628
        on right: 12
    $@62 (390)
        on left: 627
        on right: 628
    make_decl <pExpression> (391)
        on left: 629 630 631 632
        on right: 230 332
    make_struct_fields <pMakeStruct> (392)
        on left: 633 634 635 636
        on right: 310 635 636 637 638
    make_struct_dim <pExpression> (393)
        on left: 637 638
        on right: 638 641 644 645 646
    optional_block <pExpression> (394)
        on left: 639 640
        on right: 641 642 643 644 645 646
    make_struct_decl <pExpression> (395)
        on left: 641 642 643 644 645 646
        on right: 629
    make_tuple <pExpression> (396)
        on left: 647 648
        on right: 648 651
    make_map_tuple <pExpression> (397)
        on left: 649 650
        on right: 652 657 658
    make_any_tuple <pExpression> (398)
        on left: 651 652
        on right: 653 654
    make_dim <pExpression> (399)
        on left: 653 654
        on right: 654 655 656
    make_dim_decl <pExpression> (400)
        on left: 655 656
        on right: 630
    make_table <pExpression> (401)
        on left: 657 658
        on right: 658 659
    make_table_decl <pExpression> (402)
        on left: 659
        on right: 631
    array_comprehension_where <pExpression> (403)
        on left: 660 661
        on right: 662 663
    array_comprehension <pExpression> (404)
        on left: 662 663
        on right: 632


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 103 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  245 kwd_let: "let" .

    $default  reduce using rule 245 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   43 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 38
    require_module       go to state 39


State 7

  499 alias_declaration: "typedef" . '{' alias_list '}'
  500                  | "typedef" . single_alias

    "name"  shift, and go to state 40
    '{'     shift, and go to state 41

    single_alias  go to state 42


State 8

  246 kwd_let: "var" .

    $default  reduce using rule 246 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 43
    '$'     shift, and go to state 44

    module_name  go to state 45


State 10

  628 bitfield_alias_declaration: "bitfield" . $@62 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 627 ($@62)

    $@62  go to state 46


State 11

  626 variant_alias_declaration: "variant" . $@60 "name" $@61 '{' variant_type_list ';' '}'

    $default  reduce using rule 624 ($@60)

    $@60  go to state 47


State 12

  104 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 54
    name_in_namespace            go to state 55


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  187 global_function_declaration: optional_annotation_list . "def" function_declaration
  505 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  506                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  519 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 56
    "class"   shift, and go to state 57
    "def"     shift, and go to state 58
    "enum"    shift, and go to state 59

    class_or_struct  go to state 60


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  489 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  491           | kwd_let . optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 61

    $default  reduce using rule 484 (optional_shared)

    optional_shared  go to state 62


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 28

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 29

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 30

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 63

    $default  reduce using rule 92 (annotation_argument)


State 31

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 64

    $default  reduce using rule 33 (options_declaration)


State 33

   46 expect_error: "integer constant" .
   47             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 65

    $default  reduce using rule 46 (expect_error)


State 34

   43 expect_declaration: "expect" expect_list .
   45 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 66

    $default  reduce using rule 43 (expect_declaration)


State 35

   44 expect_list: expect_error .

    $default  reduce using rule 44 (expect_list)


State 36

   35 require_module_name: "name" .

    $default  reduce using rule 35 (require_module_name)


State 37

   36 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 67


State 38

   37 require_module_name: require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"
   39 require_module: require_module_name . is_public_module
   40               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 68
    "public"  shift, and go to state 69
    '/'       shift, and go to state 70
    '.'       shift, and go to state 71

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 72


State 39

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 40

  496 single_alias: "name" . $@31 '=' type_declaration

    $default  reduce using rule 495 ($@31)

    $@31  go to state 73


State 41

  499 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 40

    single_alias  go to state 74
    alias_list    go to state 75


State 42

  500 alias_declaration: "typedef" single_alias .

    $default  reduce using rule 500 (alias_declaration)


State 43

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 44

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 45

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 61

    $default  reduce using rule 484 (optional_shared)

    optional_shared  go to state 76


State 46

  628 bitfield_alias_declaration: "bitfield" $@62 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 77


State 47

  626 variant_alias_declaration: "variant" $@60 . "name" $@61 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 78


State 48

   97 annotation_declaration_name: "require" .

    $default  reduce using rule 97 (annotation_declaration_name)


State 49

   98 annotation_declaration_name: "private" .

    $default  reduce using rule 98 (annotation_declaration_name)


State 50

  224 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 79


State 51

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"

    "::"  shift, and go to state 80

    "::"      [reduce using rule 222 (name_in_namespace)]
    $default  reduce using rule 222 (name_in_namespace)


State 52

   99 annotation_declaration: annotation_declaration_name .
  100                       | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 81

    $default  reduce using rule 99 (annotation_declaration)


State 53

  101 annotation_list: annotation_declaration .

    $default  reduce using rule 101 (annotation_list)


State 54

  102 annotation_list: annotation_list . ',' annotation_declaration
  104 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


State 55

   96 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 96 (annotation_declaration_name)


State 56

  513 class_or_struct: "struct" .

    $default  reduce using rule 513 (class_or_struct)


State 57

  512 class_or_struct: "class" .

    $default  reduce using rule 512 (class_or_struct)


State 58

  187 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 84
    "private"  shift, and go to state 85

    $default  reduce using rule 188 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 86
    function_declaration                 go to state 87


State 59

  505 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  506                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 88
    "private"  shift, and go to state 89

    $default  reduce using rule 501 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 90


State 60

  519 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 91
    "private"  shift, and go to state 92

    $default  reduce using rule 514 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 93


State 61

  485 optional_shared: "shared" .

    $default  reduce using rule 485 (optional_shared)


State 62

  489 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  491           | kwd_let optional_shared . optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 94
    "private"  shift, and go to state 95

    $default  reduce using rule 486 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 96


State 63

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 97
    "false"                    shift, and go to state 98
    "integer constant"         shift, and go to state 99
    "floating point constant"  shift, and go to state 100
    "name"                     shift, and go to state 101
    "start of the string"      shift, and go to state 102
    '('                        shift, and go to state 103

    string_constant  go to state 104


State 64

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 105


State 65

   47 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 106


State 66

   45 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 107


State 67

   36 require_module_name: '%' require_module_name .
   37                    | require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"

    '.'  shift, and go to state 71

    $default  reduce using rule 36 (require_module_name)


State 68

   40 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 108


State 69

   42 is_public_module: "public" .

    $default  reduce using rule 42 (is_public_module)


State 70

   38 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 109


State 71

   37 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 110


State 72

   39 require_module: require_module_name is_public_module .

    $default  reduce using rule 39 (require_module)


State 73

  496 single_alias: "name" $@31 . '=' type_declaration

    '='  shift, and go to state 111


State 74

  497 alias_list: single_alias . ';'

    ';'  shift, and go to state 112


State 75

  498 alias_list: alias_list . single_alias ';'
  499 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 40
    '}'     shift, and go to state 113

    single_alias  go to state 114


State 76

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 117


State 77

  628 bitfield_alias_declaration: "bitfield" $@62 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 118


State 78

  626 variant_alias_declaration: "variant" $@60 "name" . $@61 '{' variant_type_list ';' '}'

    $default  reduce using rule 625 ($@61)

    $@61  go to state 119


State 79

  224 name_in_namespace: "::" "name" .

    $default  reduce using rule 224 (name_in_namespace)


State 80

  223 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 120


State 81

  100 annotation_declaration: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 121


State 82

  102 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 122
    name_in_namespace            go to state 55


State 83

  104 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 104 (optional_annotation_list)


State 84

  190 optional_public_or_private_function: "public" .

    $default  reduce using rule 190 (optional_public_or_private_function)


State 85

  189 optional_public_or_private_function: "private" .

    $default  reduce using rule 189 (optional_public_or_private_function)


State 86

  193 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 192 ($@5)

    $@5  go to state 123


State 87

  187 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 187 (global_function_declaration)


State 88

  503 optional_public_or_private_enum: "public" .

    $default  reduce using rule 503 (optional_public_or_private_enum)


State 89

  502 optional_public_or_private_enum: "private" .

    $default  reduce using rule 502 (optional_public_or_private_enum)


State 90

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  506                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 124

    enum_name  go to state 125


State 91

  516 optional_public_or_private_structure: "public" .

    $default  reduce using rule 516 (optional_public_or_private_structure)


State 92

  515 optional_public_or_private_structure: "private" .

    $default  reduce using rule 515 (optional_public_or_private_structure)


State 93

  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 517 ($@32)

    $@32  go to state 126


State 94

  488 optional_public_or_private_variable: "public" .

    $default  reduce using rule 488 (optional_public_or_private_variable)


State 95

  487 optional_public_or_private_variable: "private" .

    $default  reduce using rule 487 (optional_public_or_private_variable)


State 96

  489 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  491           | kwd_let optional_shared optional_public_or_private_variable . $@30 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 127

    $default  reduce using rule 490 ($@30)

    $@30  go to state 128


State 97

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 98

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 99

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 100

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 101

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 102

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130

    character_sequence  go to state 131


State 103

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant                 go to state 137
    annotation_argument_value       go to state 138
    annotation_argument_value_list  go to state 139


State 104

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 105

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 106

   47 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 47 (expect_error)


State 107

   45 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 45 (expect_list)


State 108

   40 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 69

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 140


State 109

   38 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 38 (require_module_name)


State 110

   37 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 37 (require_module_name)


State 111

  496 single_alias: "name" $@31 '=' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 182


State 112

  497 alias_list: single_alias ';' .

    $default  reduce using rule 497 (alias_list)


State 113

  499 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 499 (alias_declaration)


State 114

  498 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 183


State 115

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 116

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 117

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 118

  628 bitfield_alias_declaration: "bitfield" $@62 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 184

    bitfield_bits  go to state 185


State 119

  626 variant_alias_declaration: "variant" $@60 "name" $@61 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 186


State 120

  223 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 223 (name_in_namespace)


State 121

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  100 annotation_declaration: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 64
    ')'  shift, and go to state 187


State 122

  102 annotation_list: annotation_list ',' annotation_declaration .

    $default  reduce using rule 102 (annotation_list)


State 123

  193 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 124

  504 enum_name: "name" .

    $default  reduce using rule 504 (enum_name)


State 125

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  506                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 217
    '{'  shift, and go to state 218


State 126

  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 219

    $default  reduce using rule 509 (optional_sealed)

    optional_sealed  go to state 220
    structure_name   go to state 221


State 127

  489 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 481 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 222


State 128

  491 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 427 (optional_field_annotation)

    optional_field_annotation  go to state 224


State 129

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 130

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 131

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226
    "end of the string"   shift, and go to state 227


State 132

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 133

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 134

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 135

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 136

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 137

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 138

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 139

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 228
    ')'  shift, and go to state 229


State 140

   40 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 40 (require_module)


State 141

  590 type_declaration: "array" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 230


State 142

  593 type_declaration: "table" . '<' $@40 table_type_pair '>' $@41

    '<'  shift, and go to state 231


State 143

  596 type_declaration: "iterator" . '<' $@42 type_declaration '>' $@43

    '<'  shift, and go to state 232


State 144

  586 type_declaration: "smart_ptr" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 233


State 145

  525 basic_type_declaration: "bool" .

    $default  reduce using rule 525 (basic_type_declaration)


State 146

  545 basic_type_declaration: "void" .

    $default  reduce using rule 545 (basic_type_declaration)


State 147

  526 basic_type_declaration: "string" .

    $default  reduce using rule 526 (basic_type_declaration)


State 148

  557 auto_type_declaration: "auto" .
  558                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 234

    '('       [reduce using rule 557 (auto_type_declaration)]
    $default  reduce using rule 557 (auto_type_declaration)


State 149

  527 basic_type_declaration: "int" .

    $default  reduce using rule 527 (basic_type_declaration)


State 150

  531 basic_type_declaration: "int2" .

    $default  reduce using rule 531 (basic_type_declaration)


State 151

  532 basic_type_declaration: "int3" .

    $default  reduce using rule 532 (basic_type_declaration)


State 152

  533 basic_type_declaration: "int4" .

    $default  reduce using rule 533 (basic_type_declaration)


State 153

  534 basic_type_declaration: "uint" .

    $default  reduce using rule 534 (basic_type_declaration)


State 154

  549 basic_type_declaration: "bitfield" .
  564 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 235

    '<'       [reduce using rule 549 (basic_type_declaration)]
    $default  reduce using rule 549 (basic_type_declaration)


State 155

  538 basic_type_declaration: "uint2" .

    $default  reduce using rule 538 (basic_type_declaration)


State 156

  539 basic_type_declaration: "uint3" .

    $default  reduce using rule 539 (basic_type_declaration)


State 157

  540 basic_type_declaration: "uint4" .

    $default  reduce using rule 540 (basic_type_declaration)


State 158

  541 basic_type_declaration: "float" .

    $default  reduce using rule 541 (basic_type_declaration)


State 159

  542 basic_type_declaration: "float2" .

    $default  reduce using rule 542 (basic_type_declaration)


State 160

  543 basic_type_declaration: "float3" .

    $default  reduce using rule 543 (basic_type_declaration)


State 161

  544 basic_type_declaration: "float4" .

    $default  reduce using rule 544 (basic_type_declaration)


State 162

  546 basic_type_declaration: "range" .

    $default  reduce using rule 546 (basic_type_declaration)


State 163

  547 basic_type_declaration: "urange" .

    $default  reduce using rule 547 (basic_type_declaration)


State 164

  597 type_declaration: "block" .
  600                 | "block" . '<' $@44 type_declaration '>' $@45
  603                 | "block" . '<' $@46 optional_function_argument_list optional_function_type '>' $@47

    '<'  shift, and go to state 236

    '<'       [reduce using rule 597 (type_declaration)]
    $default  reduce using rule 597 (type_declaration)


State 165

  530 basic_type_declaration: "int64" .

    $default  reduce using rule 530 (basic_type_declaration)


State 166

  537 basic_type_declaration: "uint64" .

    $default  reduce using rule 537 (basic_type_declaration)


State 167

  548 basic_type_declaration: "double" .

    $default  reduce using rule 548 (basic_type_declaration)


State 168

  604 type_declaration: "function" .
  607                 | "function" . '<' $@48 type_declaration '>' $@49
  610                 | "function" . '<' $@50 optional_function_argument_list optional_function_type '>' $@51

    '<'  shift, and go to state 237

    '<'       [reduce using rule 604 (type_declaration)]
    $default  reduce using rule 604 (type_declaration)


State 169

  611 type_declaration: "lambda" .
  614                 | "lambda" . '<' $@52 type_declaration '>' $@53
  617                 | "lambda" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 238

    '<'       [reduce using rule 611 (type_declaration)]
    $default  reduce using rule 611 (type_declaration)


State 170

  528 basic_type_declaration: "int8" .

    $default  reduce using rule 528 (basic_type_declaration)


State 171

  535 basic_type_declaration: "uint8" .

    $default  reduce using rule 535 (basic_type_declaration)


State 172

  529 basic_type_declaration: "int16" .

    $default  reduce using rule 529 (basic_type_declaration)


State 173

  536 basic_type_declaration: "uint16" .

    $default  reduce using rule 536 (basic_type_declaration)


State 174

  620 type_declaration: "tuple" . '<' $@56 tuple_type_list '>' $@57

    '<'  shift, and go to state 239


State 175

  623 type_declaration: "variant" . '<' $@58 variant_type_list '>' $@59

    '<'  shift, and go to state 240


State 176

  559 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 241


State 177

  556 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 556 (structure_type_declaration)


State 178

  567 type_declaration: basic_type_declaration .

    $default  reduce using rule 567 (type_declaration)


State 179

  570 type_declaration: structure_type_declaration .

    $default  reduce using rule 570 (type_declaration)


State 180

  568 type_declaration: auto_type_declaration .

    $default  reduce using rule 568 (type_declaration)


State 181

  569 type_declaration: bitfield_type_declaration .

    $default  reduce using rule 569 (type_declaration)


State 182

  496 single_alias: "name" $@31 '=' type_declaration .
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 496 (single_alias)


State 183

  498 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 498 (alias_list)


State 184

  560 bitfield_bits: "name" .

    $default  reduce using rule 560 (bitfield_bits)


State 185

  561 bitfield_bits: bitfield_bits . ';' "name"
  628 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 252


State 186

  626 variant_alias_declaration: "variant" $@60 "name" $@61 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 255


State 187

  100 annotation_declaration: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 100 (annotation_declaration)


State 188

  111 function_name: "operator" . '!'
  112              | "operator" . '~'
  113              | "operator" . "+="
  114              | "operator" . "-="
  115              | "operator" . "*="
  116              | "operator" . "/="
  117              | "operator" . "%="
  118              | "operator" . "&="
  119              | "operator" . "|="
  120              | "operator" . "^="
  121              | "operator" . "&&="
  122              | "operator" . "||="
  123              | "operator" . "^^="
  124              | "operator" . "&&"
  125              | "operator" . "||"
  126              | "operator" . "^^"
  127              | "operator" . '+'
  128              | "operator" . '-'
  129              | "operator" . '*'
  130              | "operator" . '/'
  131              | "operator" . '%'
  132              | "operator" . '<'
  133              | "operator" . '>'
  134              | "operator" . ".."
  135              | "operator" . "=="
  136              | "operator" . "!="
  137              | "operator" . "<="
  138              | "operator" . ">="
  139              | "operator" . '&'
  140              | "operator" . '|'
  141              | "operator" . '^'
  144              | "operator" . "++"
  145              | "operator" . "--"
  146              | "operator" . "<<"
  147              | "operator" . ">>"
  148              | "operator" . "<<="
  149              | "operator" . ">>="
  150              | "operator" . "<<<"
  151              | "operator" . ">>>"
  152              | "operator" . "<<<="
  153              | "operator" . ">>>="
  154              | "operator" . '[' ']'
  155              | "operator" . "?[" ']'
  156              | "operator" . '.'
  157              | "operator" . "?."
  158              | "operator" . ":="
  159              | "operator" . "delete"
  160              | "operator" . "??"
  161              | "operator" . "is"
  162              | "operator" . "as"
  163              | "operator" . '?' "as"

    "is"      shift, and go to state 256
    "as"      shift, and go to state 257
    "delete"  shift, and go to state 258
    "+="      shift, and go to state 259
    "-="      shift, and go to state 260
    "/="      shift, and go to state 261
    "*="      shift, and go to state 262
    "%="      shift, and go to state 263
    "&="      shift, and go to state 264
    "|="      shift, and go to state 265
    "^="      shift, and go to state 266
    "<<"      shift, and go to state 267
    ">>"      shift, and go to state 268
    "++"      shift, and go to state 269
    "--"      shift, and go to state 270
    "<="      shift, and go to state 271
    "<<="     shift, and go to state 272
    ">>="     shift, and go to state 273
    ">="      shift, and go to state 274
    "=="      shift, and go to state 275
    "!="      shift, and go to state 276
    "??"      shift, and go to state 277
    "?."      shift, and go to state 278
    "?["      shift, and go to state 279
    ":="      shift, and go to state 280
    "<<<"     shift, and go to state 281
    ">>>"     shift, and go to state 282
    "<<<="    shift, and go to state 283
    ">>>="    shift, and go to state 284
    "&&"      shift, and go to state 285
    "||"      shift, and go to state 286
    "^^"      shift, and go to state 287
    "&&="     shift, and go to state 288
    "||="     shift, and go to state 289
    "^^="     shift, and go to state 290
    ".."      shift, and go to state 291
    '?'       shift, and go to state 292
    '|'       shift, and go to state 293
    '^'       shift, and go to state 294
    '&'       shift, and go to state 295
    '<'       shift, and go to state 296
    '>'       shift, and go to state 297
    '-'       shift, and go to state 298
    '+'       shift, and go to state 299
    '*'       shift, and go to state 300
    '/'       shift, and go to state 301
    '%'       shift, and go to state 302
    '~'       shift, and go to state 303
    '!'       shift, and go to state 304
    '.'       shift, and go to state 305
    '['       shift, and go to state 306


State 189

  164 function_name: "bool" .

    $default  reduce using rule 164 (function_name)


State 190

  165 function_name: "string" .

    $default  reduce using rule 165 (function_name)


State 191

  166 function_name: "int" .

    $default  reduce using rule 166 (function_name)


State 192

  167 function_name: "int2" .

    $default  reduce using rule 167 (function_name)


State 193

  168 function_name: "int3" .

    $default  reduce using rule 168 (function_name)


State 194

  169 function_name: "int4" .

    $default  reduce using rule 169 (function_name)


State 195

  170 function_name: "uint" .

    $default  reduce using rule 170 (function_name)


State 196

  171 function_name: "uint2" .

    $default  reduce using rule 171 (function_name)


State 197

  172 function_name: "uint3" .

    $default  reduce using rule 172 (function_name)


State 198

  173 function_name: "uint4" .

    $default  reduce using rule 173 (function_name)


State 199

  174 function_name: "float" .

    $default  reduce using rule 174 (function_name)


State 200

  175 function_name: "float2" .

    $default  reduce using rule 175 (function_name)


State 201

  176 function_name: "float3" .

    $default  reduce using rule 176 (function_name)


State 202

  177 function_name: "float4" .

    $default  reduce using rule 177 (function_name)


State 203

  178 function_name: "range" .

    $default  reduce using rule 178 (function_name)


State 204

  179 function_name: "urange" .

    $default  reduce using rule 179 (function_name)


State 205

  180 function_name: "int64" .

    $default  reduce using rule 180 (function_name)


State 206

  181 function_name: "uint64" .

    $default  reduce using rule 181 (function_name)


State 207

  182 function_name: "double" .

    $default  reduce using rule 182 (function_name)


State 208

  183 function_name: "int8" .

    $default  reduce using rule 183 (function_name)


State 209

  184 function_name: "uint8" .

    $default  reduce using rule 184 (function_name)


State 210

  185 function_name: "int16" .

    $default  reduce using rule 185 (function_name)


State 211

  186 function_name: "uint16" .

    $default  reduce using rule 186 (function_name)


State 212

  142 function_name: "++" . "operator"

    "operator"  shift, and go to state 307


State 213

  143 function_name: "--" . "operator"

    "operator"  shift, and go to state 308


State 214

  110 function_name: "name" .

    $default  reduce using rule 110 (function_name)


State 215

  191 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 310


State 216

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 312


State 217

  506 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 313
    "uint"    shift, and go to state 314
    "int8"    shift, and go to state 315
    "uint8"   shift, and go to state 316
    "int16"   shift, and go to state 317
    "uint16"  shift, and go to state 318

    enum_basic_type_declaration  go to state 319


State 218

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 492 (enum_list)

    enum_list  go to state 320


State 219

  510 optional_sealed: "sealed" .

    $default  reduce using rule 510 (optional_sealed)


State 220

  511 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 321


State 221

  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 518 ($@33)

    $@33  go to state 322


State 222

  483 global_variable_declaration_list: global_variable_declaration_list . $@29 optional_field_annotation let_variable_declaration
  489 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 323

    $default  reduce using rule 482 ($@29)

    $@29  go to state 324


State 223

  428 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 325


State 224

  491 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 329


State 225

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 226

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 227

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 228

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant            go to state 137
    annotation_argument_value  go to state 330


State 229

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 230

  590 type_declaration: "array" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 588 ($@38)

    $@38  go to state 331


State 231

  593 type_declaration: "table" '<' . $@40 table_type_pair '>' $@41

    $default  reduce using rule 591 ($@40)

    $@40  go to state 332


State 232

  596 type_declaration: "iterator" '<' . $@42 type_declaration '>' $@43

    $default  reduce using rule 594 ($@42)

    $@42  go to state 333


State 233

  586 type_declaration: "smart_ptr" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 584 ($@36)

    $@36  go to state 334


State 234

  558 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 335


State 235

  564 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 562 ($@34)

    $@34  go to state 336


State 236

  600 type_declaration: "block" '<' . $@44 type_declaration '>' $@45
  603                 | "block" '<' . $@46 optional_function_argument_list optional_function_type '>' $@47

    ':'       reduce using rule 601 ($@46)
    '>'       reduce using rule 601 ($@46)
    '('       reduce using rule 601 ($@46)
    $default  reduce using rule 598 ($@44)

    $@44  go to state 337
    $@46  go to state 338


State 237

  607 type_declaration: "function" '<' . $@48 type_declaration '>' $@49
  610                 | "function" '<' . $@50 optional_function_argument_list optional_function_type '>' $@51

    ':'       reduce using rule 608 ($@50)
    '>'       reduce using rule 608 ($@50)
    '('       reduce using rule 608 ($@50)
    $default  reduce using rule 605 ($@48)

    $@48  go to state 339
    $@50  go to state 340


State 238

  614 type_declaration: "lambda" '<' . $@52 type_declaration '>' $@53
  617                 | "lambda" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 615 ($@54)
    '>'       reduce using rule 615 ($@54)
    '('       reduce using rule 615 ($@54)
    $default  reduce using rule 612 ($@52)

    $@52  go to state 341
    $@54  go to state 342


State 239

  620 type_declaration: "tuple" '<' . $@56 tuple_type_list '>' $@57

    $default  reduce using rule 618 ($@56)

    $@56  go to state 343


State 240

  623 type_declaration: "variant" '<' . $@58 variant_type_list '>' $@59

    $default  reduce using rule 621 ($@58)

    $@58  go to state 344


State 241

  559 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 401
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 242

  575 type_declaration: type_declaration "const" .

    $default  reduce using rule 575 (type_declaration)


State 243

  580 type_declaration: type_declaration "implicit" .

    $default  reduce using rule 580 (type_declaration)


State 244

  574 type_declaration: type_declaration "explicit" .

    $default  reduce using rule 574 (type_declaration)


State 245

  587 type_declaration: type_declaration "??" .

    $default  reduce using rule 587 (type_declaration)


State 246

  582 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409


State 247

  583 type_declaration: type_declaration '?' .

    $default  reduce using rule 583 (type_declaration)


State 248

  577 type_declaration: type_declaration '&' .

    $default  reduce using rule 577 (type_declaration)


State 249

  573 type_declaration: type_declaration '-' . '[' ']'
  576                 | type_declaration '-' . "const"
  578                 | type_declaration '-' . '&'
  581                 | type_declaration '-' . '#'

    "const"  shift, and go to state 410
    '&'      shift, and go to state 411
    '['      shift, and go to state 412
    '#'      shift, and go to state 413


State 250

  571 type_declaration: type_declaration '[' . expr ']'
  572                 | type_declaration '[' . ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    ']'                               shift, and go to state 414
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 415
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 251

  579 type_declaration: type_declaration '#' .

    $default  reduce using rule 579 (type_declaration)


State 252

  561 bitfield_bits: bitfield_bits ';' . "name"
  628 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 416
    '}'     shift, and go to state 417


State 253

  455 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 418


State 254

  456 variant_type_list: variant_type .

    $default  reduce using rule 456 (variant_type_list)


State 255

  457 variant_type_list: variant_type_list . ';' variant_type
  626 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 419


State 256

  161 function_name: "operator" "is" .

    $default  reduce using rule 161 (function_name)


State 257

  162 function_name: "operator" "as" .

    $default  reduce using rule 162 (function_name)


State 258

  159 function_name: "operator" "delete" .

    $default  reduce using rule 159 (function_name)


State 259

  113 function_name: "operator" "+=" .

    $default  reduce using rule 113 (function_name)


State 260

  114 function_name: "operator" "-=" .

    $default  reduce using rule 114 (function_name)


State 261

  116 function_name: "operator" "/=" .

    $default  reduce using rule 116 (function_name)


State 262

  115 function_name: "operator" "*=" .

    $default  reduce using rule 115 (function_name)


State 263

  117 function_name: "operator" "%=" .

    $default  reduce using rule 117 (function_name)


State 264

  118 function_name: "operator" "&=" .

    $default  reduce using rule 118 (function_name)


State 265

  119 function_name: "operator" "|=" .

    $default  reduce using rule 119 (function_name)


State 266

  120 function_name: "operator" "^=" .

    $default  reduce using rule 120 (function_name)


State 267

  146 function_name: "operator" "<<" .

    $default  reduce using rule 146 (function_name)


State 268

  147 function_name: "operator" ">>" .

    $default  reduce using rule 147 (function_name)


State 269

  144 function_name: "operator" "++" .

    $default  reduce using rule 144 (function_name)


State 270

  145 function_name: "operator" "--" .

    $default  reduce using rule 145 (function_name)


State 271

  137 function_name: "operator" "<=" .

    $default  reduce using rule 137 (function_name)


State 272

  148 function_name: "operator" "<<=" .

    $default  reduce using rule 148 (function_name)


State 273

  149 function_name: "operator" ">>=" .

    $default  reduce using rule 149 (function_name)


State 274

  138 function_name: "operator" ">=" .

    $default  reduce using rule 138 (function_name)


State 275

  135 function_name: "operator" "==" .

    $default  reduce using rule 135 (function_name)


State 276

  136 function_name: "operator" "!=" .

    $default  reduce using rule 136 (function_name)


State 277

  160 function_name: "operator" "??" .

    $default  reduce using rule 160 (function_name)


State 278

  157 function_name: "operator" "?." .

    $default  reduce using rule 157 (function_name)


State 279

  155 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 420


State 280

  158 function_name: "operator" ":=" .

    $default  reduce using rule 158 (function_name)


State 281

  150 function_name: "operator" "<<<" .

    $default  reduce using rule 150 (function_name)


State 282

  151 function_name: "operator" ">>>" .

    $default  reduce using rule 151 (function_name)


State 283

  152 function_name: "operator" "<<<=" .

    $default  reduce using rule 152 (function_name)


State 284

  153 function_name: "operator" ">>>=" .

    $default  reduce using rule 153 (function_name)


State 285

  124 function_name: "operator" "&&" .

    $default  reduce using rule 124 (function_name)


State 286

  125 function_name: "operator" "||" .

    $default  reduce using rule 125 (function_name)


State 287

  126 function_name: "operator" "^^" .

    $default  reduce using rule 126 (function_name)


State 288

  121 function_name: "operator" "&&=" .

    $default  reduce using rule 121 (function_name)


State 289

  122 function_name: "operator" "||=" .

    $default  reduce using rule 122 (function_name)


State 290

  123 function_name: "operator" "^^=" .

    $default  reduce using rule 123 (function_name)


State 291

  134 function_name: "operator" ".." .

    $default  reduce using rule 134 (function_name)


State 292

  163 function_name: "operator" '?' . "as"

    "as"  shift, and go to state 421


State 293

  140 function_name: "operator" '|' .

    $default  reduce using rule 140 (function_name)


State 294

  141 function_name: "operator" '^' .

    $default  reduce using rule 141 (function_name)


State 295

  139 function_name: "operator" '&' .

    $default  reduce using rule 139 (function_name)


State 296

  132 function_name: "operator" '<' .

    $default  reduce using rule 132 (function_name)


State 297

  133 function_name: "operator" '>' .

    $default  reduce using rule 133 (function_name)


State 298

  128 function_name: "operator" '-' .

    $default  reduce using rule 128 (function_name)


State 299

  127 function_name: "operator" '+' .

    $default  reduce using rule 127 (function_name)


State 300

  129 function_name: "operator" '*' .

    $default  reduce using rule 129 (function_name)


State 301

  130 function_name: "operator" '/' .

    $default  reduce using rule 130 (function_name)


State 302

  131 function_name: "operator" '%' .

    $default  reduce using rule 131 (function_name)


State 303

  112 function_name: "operator" '~' .

    $default  reduce using rule 112 (function_name)


State 304

  111 function_name: "operator" '!' .

    $default  reduce using rule 111 (function_name)


State 305

  156 function_name: "operator" '.' .

    $default  reduce using rule 156 (function_name)


State 306

  154 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 422


State 307

  142 function_name: "++" "operator" .

    $default  reduce using rule 142 (function_name)


State 308

  143 function_name: "--" "operator" .

    $default  reduce using rule 143 (function_name)


State 309

  106 optional_function_argument_list: '(' . ')'
  107                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223
    ')'   shift, and go to state 424

    $default  reduce using rule 427 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 426
    function_argument_list         go to state 427


State 310

  191 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 429


State 311

  194 expression_block: '{' . expressions '}'
  195                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 216 (expressions)

    expressions  go to state 430


State 312

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 193 (function_declaration)


State 313

  550 enum_basic_type_declaration: "int" .

    $default  reduce using rule 550 (enum_basic_type_declaration)


State 314

  553 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 553 (enum_basic_type_declaration)


State 315

  551 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 551 (enum_basic_type_declaration)


State 316

  554 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 554 (enum_basic_type_declaration)


State 317

  552 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 552 (enum_basic_type_declaration)


State 318

  555 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 555 (enum_basic_type_declaration)


State 319

  506 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 431


State 320

  493 enum_list: enum_list . "name" ';'
  494          | enum_list . "name" '=' expr ';'
  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 433


State 321

  511 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 434

    $default  reduce using rule 507 (optional_structure_parent)

    optional_structure_parent  go to state 435


State 322

  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 436


State 323

  489 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 489 (global_let)


State 324

  483 global_variable_declaration_list: global_variable_declaration_list $@29 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223

    $default  reduce using rule 427 (optional_field_annotation)

    optional_field_annotation  go to state 437


State 325

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  428 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 64
    ']'  shift, and go to state 438


State 326

  472 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 439


State 327

  471 let_variable_name_with_pos_list: "name" .
  473                                | "name" . "aka" "name"

    "aka"  shift, and go to state 440

    $default  reduce using rule 471 (let_variable_name_with_pos_list)


State 328

  474 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  475                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  476 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration ';'
  477                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr ';'
  478                         | let_variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr_pipe
  479                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  480                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 441
    ':'  shift, and go to state 442
    '&'  shift, and go to state 443

    $default  reduce using rule 469 (optional_ref)

    optional_ref  go to state 444


State 329

  491 global_let: kwd_let optional_shared optional_public_or_private_variable $@30 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 491 (global_let)


State 330

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 331

  590 type_declaration: "array" '<' $@38 . type_declaration '>' $@39

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 445


State 332

  593 type_declaration: "table" '<' $@40 . table_type_pair '>' $@41

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    table_type_pair             go to state 446
    type_declaration            go to state 447


State 333

  596 type_declaration: "iterator" '<' $@42 . type_declaration '>' $@43

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 448


State 334

  586 type_declaration: "smart_ptr" '<' $@36 . type_declaration '>' $@37

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 449


State 335

  558 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 450


State 336

  564 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 184

    bitfield_bits  go to state 451


State 337

  600 type_declaration: "block" '<' $@44 . type_declaration '>' $@45

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 452


State 338

  603 type_declaration: "block" '<' $@46 . optional_function_argument_list optional_function_type '>' $@47

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 453


State 339

  607 type_declaration: "function" '<' $@48 . type_declaration '>' $@49

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 454


State 340

  610 type_declaration: "function" '<' $@50 . optional_function_argument_list optional_function_type '>' $@51

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 455


State 341

  614 type_declaration: "lambda" '<' $@52 . type_declaration '>' $@53

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 456


State 342

  617 type_declaration: "lambda" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 457


State 343

  620 type_declaration: "tuple" '<' $@56 . tuple_type_list '>' $@57

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 459
    tuple_type_list             go to state 460
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 344

  623 type_declaration: "variant" '<' $@58 . variant_type_list '>' $@59

    "name"  shift, and go to state 253

    variant_type       go to state 254
    variant_type_list  go to state 462


State 345

  333 expr: "true" .

    $default  reduce using rule 333 (expr)


State 346

  334 expr: "false" .

    $default  reduce using rule 334 (expr)


State 347

  227 expr_new: "new" . type_declaration
  228         | "new" . type_declaration '(' ')'
  229         | "new" . type_declaration '(' expr_list ')'
  230         | "new" . make_decl

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "[["         shift, and go to state 367
    "[{"         shift, and go to state 368
    "{{"         shift, and go to state 369
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 463
    make_decl                   go to state 464
    make_struct_decl            go to state 405
    make_dim_decl               go to state 406
    make_table_decl             go to state 407
    array_comprehension         go to state 408


State 348

  260 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  261               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  262               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 465


State 349

  259 expr_type_decl: "type" . '<' $@12 type_declaration '>' $@13

    '<'  shift, and go to state 466


State 350

  327 expr: "null" .

    $default  reduce using rule 327 (expr)


State 351

  380 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 467


State 352

  250 expr_cast: "cast" . '<' $@6 type_declaration '>' $@7 expr

    '<'  shift, and go to state 468


State 353

  253 expr_cast: "upcast" . '<' $@8 type_declaration '>' $@9 expr

    '<'  shift, and go to state 469


State 354

  381 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 470


State 355

  256 expr_cast: "reinterpret" . '<' $@10 type_declaration '>' $@11 expr

    '<'  shift, and go to state 471


State 356

  411 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472


State 357

  549 basic_type_declaration: "bitfield" .

    $default  reduce using rule 549 (basic_type_declaration)


State 358

  382 expr: "generator" . '<' type_declaration '>' optional_capture_list '(' ')'
  383     | "generator" . '<' type_declaration '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 473


State 359

  363 expr: "++" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 474
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 360

  364 expr: "--" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 475
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 361

  412 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 476


State 362

  413 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 477


State 363

  414 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 478


State 364

  415 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 479


State 365

  416 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 480


State 366

  417 expr_mtag: "$c" . '(' expr ')' '(' ')'
  418          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 481


State 367

  641 make_struct_decl: "[[" . type_declaration make_struct_dim optional_block ']' ']'
  642                 | "[[" . type_declaration optional_block ']' ']'
  643                 | "[[" . type_declaration '(' ')' optional_block ']' ']'
  644                 | "[[" . type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  655 make_dim_decl: "[[" . type_declaration make_dim ']' ']'
  662 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 482
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 483


State 368

  645 make_struct_decl: "[{" . type_declaration make_struct_dim optional_block '}' ']'
  646                 | "[{" . type_declaration '(' ')' make_struct_dim optional_block '}' ']'
  656 make_dim_decl: "[{" . type_declaration make_dim '}' ']'
  663 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 484
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 485


State 369

  659 make_table_decl: "{{" . make_table '}' '}'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 487
    make_dim_decl           go to state 406
    make_table              go to state 488
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 370

  281 expr_numeric_const: "integer constant" .

    $default  reduce using rule 281 (expr_numeric_const)


State 371

  283 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 283 (expr_numeric_const)


State 372

  282 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 282 (expr_numeric_const)


State 373

  284 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 284 (expr_numeric_const)


State 374

  285 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 285 (expr_numeric_const)


State 375

  286 expr_numeric_const: "double constant" .

    $default  reduce using rule 286 (expr_numeric_const)


State 376

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 489


State 377

  340 expr: '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 378

  339 expr: '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 491
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 379

  379 expr: '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 492
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 380

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 493


State 381

  338 expr: '~' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 494
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 382

  337 expr: '!' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 495
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 383

  367 expr: '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 384

  268 block_or_lambda: '$' .

    $default  reduce using rule 268 (block_or_lambda)


State 385

  269 block_or_lambda: '@' .
  270                | '@' . '@'
  315 func_addr_expr: '@' . '@' func_addr_name
  318               | '@' . '@' '<' $@14 type_declaration '>' $@15 func_addr_name
  321               | '@' . '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name
  426 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 497

    $default  reduce using rule 269 (block_or_lambda)


State 386

  331 expr: string_builder .

    $default  reduce using rule 331 (expr)


State 387

  330 expr: expr_reader .

    $default  reduce using rule 330 (expr)


State 388

  279 expr_block: expression_block .

    $default  reduce using rule 279 (expr_block)


State 389

  310 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  328 expr: name_in_namespace .
  375     | name_in_namespace . '(' ')'
  376     | name_in_namespace . '(' expr_list ')'
  410     | name_in_namespace . "name"

    "name"  shift, and go to state 498
    '('     shift, and go to state 499

    "name"    [reduce using rule 328 (expr)]
    '('       [reduce using rule 328 (expr)]
    $default  reduce using rule 328 (expr)


State 390

  404 expr: expr_new .

    $default  reduce using rule 404 (expr)


State 391

  403 expr: expr_cast .

    $default  reduce using rule 403 (expr)


State 392

  402 expr: expr_type_decl .

    $default  reduce using rule 402 (expr)


State 393

  401 expr: expr_type_info .

    $default  reduce using rule 401 (expr)


State 394

  280 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 103 (optional_annotation_list)

    optional_annotation_list  go to state 500


State 395

  407 expr: expr_block .

    $default  reduce using rule 407 (expr)


State 396

  329 expr: expr_numeric_const .

    $default  reduce using rule 329 (expr)


State 397

  406 expr: expr_named_call .

    $default  reduce using rule 406 (expr)


State 398

  405 expr: expr_method_call .

    $default  reduce using rule 405 (expr)


State 399

  374 expr: func_addr_expr .

    $default  reduce using rule 374 (expr)


State 400

  335 expr: expr_field .

    $default  reduce using rule 335 (expr)


State 401

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  559 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 536


State 402

  336 expr: expr_mtag .

    $default  reduce using rule 336 (expr)


State 403

  377 expr: basic_type_declaration . '(' ')'
  378     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 537


State 404

  332 expr: make_decl .

    $default  reduce using rule 332 (expr)


State 405

  629 make_decl: make_struct_decl .

    $default  reduce using rule 629 (make_decl)


State 406

  630 make_decl: make_dim_decl .

    $default  reduce using rule 630 (make_decl)


State 407

  631 make_decl: make_table_decl .

    $default  reduce using rule 631 (make_decl)


State 408

  632 make_decl: array_comprehension .

    $default  reduce using rule 632 (make_decl)


State 409

  582 type_declaration: type_declaration '=' "const" .

    $default  reduce using rule 582 (type_declaration)


State 410

  576 type_declaration: type_declaration '-' "const" .

    $default  reduce using rule 576 (type_declaration)


State 411

  578 type_declaration: type_declaration '-' '&' .

    $default  reduce using rule 578 (type_declaration)


State 412

  573 type_declaration: type_declaration '-' '[' . ']'

    ']'  shift, and go to state 538


State 413

  581 type_declaration: type_declaration '-' '#' .

    $default  reduce using rule 581 (type_declaration)


State 414

  572 type_declaration: type_declaration '[' ']' .

    $default  reduce using rule 572 (type_declaration)


State 415

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  571 type_declaration: type_declaration '[' expr . ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 539


State 416

  561 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 561 (bitfield_bits)


State 417

  628 bitfield_alias_declaration: "bitfield" $@62 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 628 (bitfield_alias_declaration)


State 418

  455 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 540


State 419

  457 variant_type_list: variant_type_list ';' . variant_type
  626 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 253
    '}'     shift, and go to state 541

    variant_type  go to state 542


State 420

  155 function_name: "operator" "?[" ']' .

    $default  reduce using rule 155 (function_name)


State 421

  163 function_name: "operator" '?' "as" .

    $default  reduce using rule 163 (function_name)


State 422

  154 function_name: "operator" '[' ']' .

    $default  reduce using rule 154 (function_name)


State 423

  448 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 543


State 424

  106 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 106 (optional_function_argument_list)


State 425

  446 function_argument_declaration: optional_field_annotation . variable_declaration
  447                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 544
    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 547
    variable_name_with_pos_list  go to state 548


State 426

  449 function_argument_list: function_argument_declaration .

    $default  reduce using rule 449 (function_argument_list)


State 427

  107 optional_function_argument_list: '(' function_argument_list . ')'
  450 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 549
    ';'  shift, and go to state 550


State 428

  109 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 551


State 429

  191 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 191 (function_declaration_header)


State 430

  194 expression_block: '{' expressions . '}'
  195                 | '{' expressions . '}' "finally" '{' expressions '}'
  217 expressions: expressions . expression_any
  218            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 572

    string_builder             go to state 386
    expr_reader                go to state 387
    expression_label           go to state 573
    expression_goto            go to state 574
    if_or_static_if            go to state 575
    expression_if_one_liner    go to state 576
    expression_if_then_else    go to state 577
    expression_for_loop        go to state 578
    expression_unsafe          go to state 579
    expression_while_loop      go to state 580
    expression_with            go to state 581
    expression_with_alias      go to state 582
    expression_block           go to state 388
    expression_any             go to state 583
    expr_pipe                  go to state 584
    name_in_namespace          go to state 389
    expression_delete          go to state 585
    expr_new                   go to state 390
    expression_break           go to state 586
    expression_continue        go to state 587
    expression_return_no_pipe  go to state 588
    expression_return          go to state 589
    expression_yield_no_pipe   go to state 590
    expression_yield           go to state 591
    expression_try_catch       go to state 592
    kwd_let                    go to state 593
    expression_let             go to state 594
    expr_cast                  go to state 391
    expr_type_decl             go to state 392
    expr_type_info             go to state 393
    block_or_lambda            go to state 394
    expr_block                 go to state 395
    expr_numeric_const         go to state 396
    expr_assign                go to state 595
    expr_assign_pipe           go to state 596
    expr_named_call            go to state 397
    expr_method_call           go to state 398
    func_addr_expr             go to state 399
    expr_field                 go to state 400
    expr                       go to state 597
    expr_mtag                  go to state 402
    basic_type_declaration     go to state 403
    make_decl                  go to state 404
    make_struct_decl           go to state 405
    make_dim_decl              go to state 406
    make_table_decl            go to state 407
    array_comprehension        go to state 408


State 431

  506 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 492 (enum_list)

    enum_list  go to state 598


State 432

  493 enum_list: enum_list "name" . ';'
  494          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 599
    ';'  shift, and go to state 600


State 433

  505 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 505 (enum_declaration)


State 434

  508 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 601


State 435

  511 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 511 (structure_name)


State 436

  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 438 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 602


State 437

  483 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 603


State 438

  428 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 604


State 439

  472 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 605
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 440

  473 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 606


State 441

  474 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  475                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 607


State 442

  476 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration ';'
  477                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr ';'
  478                         | let_variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 608


State 443

  470 optional_ref: '&' .

    $default  reduce using rule 470 (optional_ref)


State 444

  479 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  480                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 609
    ":="  shift, and go to state 610
    '='   shift, and go to state 611

    copy_or_move_or_clone  go to state 612


State 445

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"
  590                 | "array" '<' $@38 type_declaration . '>' $@39

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 613
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 446

  593 type_declaration: "table" '<' $@40 table_type_pair . '>' $@41

    '>'  shift, and go to state 614


State 447

  565 table_type_pair: type_declaration .
  566                | type_declaration . ';' type_declaration
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 615
    '#'         shift, and go to state 251

    $default  reduce using rule 565 (table_type_pair)


State 448

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"
  596                 | "iterator" '<' $@42 type_declaration . '>' $@43

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 616
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 449

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  586                 | "smart_ptr" '<' $@36 type_declaration . '>' $@37
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 617
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 450

  558 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 558 (auto_type_declaration)


State 451

  561 bitfield_bits: bitfield_bits . ';' "name"
  564 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    '>'  shift, and go to state 618
    ';'  shift, and go to state 619


State 452

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"
  600                 | "block" '<' $@44 type_declaration . '>' $@45

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 620
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 453

  603 type_declaration: "block" '<' $@46 optional_function_argument_list . optional_function_type '>' $@47

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 621


State 454

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"
  607                 | "function" '<' $@48 type_declaration . '>' $@49

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 622
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 455

  610 type_declaration: "function" '<' $@50 optional_function_argument_list . optional_function_type '>' $@51

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 623


State 456

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"
  614                 | "lambda" '<' $@52 type_declaration . '>' $@53

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 624
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 457

  617 type_declaration: "lambda" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 625


State 458

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"
  452 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 80
    ':'   shift, and go to state 626

    $default  reduce using rule 222 (name_in_namespace)


State 459

  453 tuple_type_list: tuple_type .

    $default  reduce using rule 453 (tuple_type_list)


State 460

  454 tuple_type_list: tuple_type_list . ';' tuple_type
  620 type_declaration: "tuple" '<' $@56 tuple_type_list . '>' $@57

    '>'  shift, and go to state 627
    ';'  shift, and go to state 628


State 461

  451 tuple_type: type_declaration .
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 451 (tuple_type)


State 462

  457 variant_type_list: variant_type_list . ';' variant_type
  623 type_declaration: "variant" '<' $@58 variant_type_list . '>' $@59

    '>'  shift, and go to state 629
    ';'  shift, and go to state 630


State 463

  227 expr_new: "new" type_declaration .
  228         | "new" type_declaration . '(' ')'
  229         | "new" type_declaration . '(' expr_list ')'
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '('         shift, and go to state 631
    '#'         shift, and go to state 251

    "??"      [reduce using rule 227 (expr_new)]
    '='       [reduce using rule 227 (expr_new)]
    '?'       [reduce using rule 227 (expr_new)]
    '&'       [reduce using rule 227 (expr_new)]
    '-'       [reduce using rule 227 (expr_new)]
    '['       [reduce using rule 227 (expr_new)]
    '('       [reduce using rule 227 (expr_new)]
    $default  reduce using rule 227 (expr_new)


State 464

  230 expr_new: "new" make_decl .

    $default  reduce using rule 230 (expr_new)


State 465

  260 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  261               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  262               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 632


State 466

  259 expr_type_decl: "type" '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 257 ($@12)

    $@12  go to state 633


State 467

  380 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 634
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 468

  250 expr_cast: "cast" '<' . $@6 type_declaration '>' $@7 expr

    $default  reduce using rule 248 ($@6)

    $@6  go to state 635


State 469

  253 expr_cast: "upcast" '<' . $@8 type_declaration '>' $@9 expr

    $default  reduce using rule 251 ($@8)

    $@8  go to state 636


State 470

  381 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 637
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 471

  256 expr_cast: "reinterpret" '<' . $@10 type_declaration '>' $@11 expr

    $default  reduce using rule 254 ($@10)

    $@10  go to state 638


State 472

  411 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 639
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 473

  382 expr: "generator" '<' . type_declaration '>' optional_capture_list '(' ')'
  383     | "generator" '<' . type_declaration '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 640


State 474

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  363     | "++" expr .
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 363 (expr)


State 475

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  364     | "--" expr .
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 364 (expr)


State 476

  412 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 641
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 477

  413 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 642
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 478

  414 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 643
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 479

  415 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 644
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 480

  416 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 645
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 481

  417 expr_mtag: "$c" '(' . expr ')' '(' ')'
  418          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 646
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 482

  662 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 647


State 483

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"
  641 make_struct_decl: "[[" type_declaration . make_struct_dim optional_block ']' ']'
  642                 | "[[" type_declaration . optional_block ']' ']'
  643                 | "[[" type_declaration . '(' ')' optional_block ']' ']'
  644                 | "[[" type_declaration . '(' ')' make_struct_dim optional_block ']' ']'
  655 make_dim_decl: "[[" type_declaration . make_dim ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "where"                           shift, and go to state 648
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 649
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 650
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 651
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    $default  reduce using rule 639 (optional_block)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 652
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 653
    make_struct_dim         go to state 654
    optional_block          go to state 655
    make_struct_decl        go to state 405
    make_tuple              go to state 656
    make_map_tuple          go to state 657
    make_any_tuple          go to state 658
    make_dim                go to state 659
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 484

  663 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 660


State 485

  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"
  645 make_struct_decl: "[{" type_declaration . make_struct_dim optional_block '}' ']'
  646                 | "[{" type_declaration . '(' ')' make_struct_dim optional_block '}' ']'
  656 make_dim_decl: "[{" type_declaration . make_dim '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 242
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "implicit"                        shift, and go to state 243
    "explicit"                        shift, and go to state 244
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "??"                              shift, and go to state 245
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 649
    "start of the string"             shift, and go to state 376
    '='                               shift, and go to state 246
    '?'                               shift, and go to state 247
    '&'                               shift, and go to state 248
    '-'                               shift, and go to state 650
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 250
    '('                               shift, and go to state 661
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 251

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 652
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_fields      go to state 653
    make_struct_dim         go to state 662
    make_struct_decl        go to state 405
    make_tuple              go to state 656
    make_map_tuple          go to state 657
    make_any_tuple          go to state 658
    make_dim                go to state 663
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 486

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  649 make_map_tuple: expr . "=>" expr
  650               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 664
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 650 (make_map_tuple)


State 487

  657 make_table: make_map_tuple .

    $default  reduce using rule 657 (make_table)


State 488

  658 make_table: make_table . ';' make_map_tuple
  659 make_table_decl: "{{" make_table . '}' '}'

    ';'  shift, and go to state 665
    '}'  shift, and go to state 666


State 489

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130
    "end of the string"   shift, and go to state 667
    "{"                   shift, and go to state 668

    character_sequence  go to state 669


State 490

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  340 expr: '-' expr .
  341     | expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 340 (expr)


State 491

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  339 expr: '+' expr .
  341     | expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 339 (expr)


State 492

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  379     | '*' expr .
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 379 (expr)


State 493

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 670


State 494

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  338 expr: '~' expr .
  341     | expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 338 (expr)


State 495

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  337 expr: '!' expr .
  341     | expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 337 (expr)


State 496

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  367     | '(' expr . ')'
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 671


State 497

  270 block_or_lambda: '@' '@' .
  315 func_addr_expr: '@' '@' . func_addr_name
  318               | '@' '@' . '<' $@14 type_declaration '>' $@15 func_addr_name
  321               | '@' '@' . '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name
  426 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 672
    "$c"    shift, and go to state 673
    "name"  shift, and go to state 51
    '<'     shift, and go to state 674

    $default  reduce using rule 270 (block_or_lambda)

    name_in_namespace  go to state 675
    func_addr_name     go to state 676


State 498

  410 expr: name_in_namespace "name" .

    $default  reduce using rule 410 (expr)


State 499

  310 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  375 expr: name_in_namespace '(' . ')'
  376     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 677
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 678
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 679
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 500

  280 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 681

    $default  reduce using rule 277 (optional_capture_list)

    optional_capture_list  go to state 682


State 501

  388 expr: expr "is" . "type" '<' $@20 type_declaration '>' $@21
  389     | expr "is" . basic_type_declaration
  390     | expr "is" . "name"
  425 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 683
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 684
    "name"      shift, and go to state 685

    basic_type_declaration  go to state 686


State 502

  391 expr: expr "as" . "name"
  394     | expr "as" . "type" '<' $@22 type_declaration '>' $@23
  395     | expr "as" . basic_type_declaration
  423 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 687
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 688
    "name"      shift, and go to state 689

    basic_type_declaration  go to state 690


State 503

  341 expr: expr "<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 691
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 504

  342 expr: expr ">>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 692
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 505

  365 expr: expr "++" .

    $default  reduce using rule 365 (expr)


State 506

  366 expr: expr "--" .

    $default  reduce using rule 366 (expr)


State 507

  354 expr: expr "<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 693
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 508

  355 expr: expr ">=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 694
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 509

  352 expr: expr "==" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 695
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 510

  353 expr: expr "!=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 696
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 511

  311 expr_method_call: expr "->" . "name" '(' ')'
  312                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 697


State 512

  384 expr: expr "??" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 698
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 513

  372 expr: expr "?." . "name"
  420 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 699
    "name"  shift, and go to state 700


State 514

  370 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 701
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 515

  408 expr: expr "<|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 702
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 516

  409 expr: expr "|>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 703
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 517

  343 expr: expr "<<<" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 704
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 518

  344 expr: expr ">>>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 705
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 519

  359 expr: expr "&&" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 706
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 520

  360 expr: expr "||" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 707
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 521

  361 expr: expr "^^" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 708
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 522

  362 expr: expr ".." . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 709
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 523

  385 expr: expr '?' . expr ':' expr
  396     | expr '?' . "as" "name"
  399     | expr '?' . "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr '?' . "as" basic_type_declaration
  424 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "as"                              shift, and go to state 710
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 711
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 524

  357 expr: expr '|' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 712
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 525

  358 expr: expr '^' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 713
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 526

  356 expr: expr '&' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 714
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 527

  350 expr: expr '<' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 715
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 528

  351 expr: expr '>' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 716
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 529

  346 expr: expr '-' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 717
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 530

  345 expr: expr '+' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 718
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 531

  347 expr: expr '*' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 719
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 532

  348 expr: expr '/' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 720
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 533

  349 expr: expr '%' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 721
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 534

  322 expr_field: expr '.' . "name"
  323           | expr '.' . '.' "name"
  326           | expr '.' . $@18 error $@19
  369 expr: expr '.' . '[' expr ']'
  371     | expr '.' . "?[" expr ']'
  373     | expr '.' . "?." "name"
  419 expr_mtag: expr '.' . "$f" '(' expr ')'
  421          | expr '.' . '.' "$f" '(' expr ')'
  422          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "$f"    shift, and go to state 724
    "name"  shift, and go to state 725
    '.'     shift, and go to state 726
    '['     shift, and go to state 727

    $default  reduce using rule 324 ($@18)

    $@18  go to state 728


State 535

  368 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 729
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 536

  559 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 559 (auto_type_declaration)


State 537

  377 expr: basic_type_declaration '(' . ')'
  378     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 730
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 731
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 538

  573 type_declaration: type_declaration '-' '[' ']' .

    $default  reduce using rule 573 (type_declaration)


State 539

  571 type_declaration: type_declaration '[' expr ']' .

    $default  reduce using rule 571 (type_declaration)


State 540

  455 variant_type: "name" ':' type_declaration .
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 455 (variant_type)


State 541

  626 variant_alias_declaration: "variant" $@60 "name" $@61 '{' variant_type_list ';' '}' .

    $default  reduce using rule 626 (variant_alias_declaration)


State 542

  457 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 457 (variant_type_list)


State 543

  448 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 732
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 544

  447 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 733
    variable_name_with_pos_list  go to state 548


State 545

  521 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 734


State 546

  520 variable_name_with_pos_list: "name" .
  522                            | "name" . "aka" "name"

    "aka"  shift, and go to state 735

    $default  reduce using rule 520 (variable_name_with_pos_list)


State 547

  446 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 446 (function_argument_declaration)


State 548

  460 variable_declaration: variable_name_with_pos_list .
  461                     | variable_name_with_pos_list . '&'
  462                     | variable_name_with_pos_list . ':' type_declaration
  463                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  464                     | variable_name_with_pos_list . copy_or_move expr
  465                     | variable_name_with_pos_list . copy_or_move expr_pipe
  523 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  524                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 736
    ','   shift, and go to state 737
    '='   shift, and go to state 738
    ':'   shift, and go to state 739
    '&'   shift, and go to state 740

    $default  reduce using rule 460 (variable_declaration)

    copy_or_move  go to state 741


State 549

  107 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 107 (optional_function_argument_list)


State 550

  450 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 423
    "[["  shift, and go to state 223

    $default  reduce using rule 427 (optional_field_annotation)

    optional_field_annotation      go to state 425
    function_argument_declaration  go to state 742


State 551

  109 optional_function_type: ':' type_declaration .
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 109 (optional_function_type)


State 552

  218 expressions: expressions error .

    $default  reduce using rule 218 (expressions)


State 553

   71 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 743
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 554

   56 if_or_static_if: "if" .

    $default  reduce using rule 56 (if_or_static_if)


State 555

   57 if_or_static_if: "static_if" .

    $default  reduce using rule 57 (if_or_static_if)


State 556

   69 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_name_with_pos_list  go to state 744


State 557

  233 expression_return_no_pipe: "return" .
  234                          | "return" . expr
  235                          | "return" . "<-" expr
  237 expression_return: "return" . expr_pipe
  238                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 745
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    $default  reduce using rule 233 (expression_return_no_pipe)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 746
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 748
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 558

  231 expression_break: "break" .

    $default  reduce using rule 231 (expression_break)


State 559

  244 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 749


State 560

  225 expression_delete: "delete" . expr
  226                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "explicit"                        shift, and go to state 750
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 751
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 561

   72 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 752
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 562

   74 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 753


State 563

  232 expression_continue: "continue" .

    $default  reduce using rule 232 (expression_continue)


State 564

  215 expression_any: "pass" . ';'

    ';'  shift, and go to state 754


State 565

   48 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 755


State 566

   49 expression_goto: "goto" . "label" "integer constant"
   50                | "goto" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 756
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 757
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 567

   70 expression_unsafe: "unsafe" . expression_block
  411 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 472
    '{'  shift, and go to state 311

    expression_block  go to state 758


State 568

  239 expression_yield_no_pipe: "yield" . expr
  240                         | "yield" . "<-" expr
  242 expression_yield: "yield" . expr_pipe
  243                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 759
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 760
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 761
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 569

  220 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 762
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 763


State 570

  221 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 762
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 764


State 571

  196 expression_any: ';' .

    $default  reduce using rule 196 (expression_any)


State 572

  194 expression_block: '{' expressions '}' .
  195                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 765

    $default  reduce using rule 194 (expression_block)


State 573

  213 expression_any: expression_label . ';'

    ';'  shift, and go to state 766


State 574

  214 expression_any: expression_goto . ';'

    ';'  shift, and go to state 767


State 575

   66 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 768
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 576

   68 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 769


State 577

  211 expression_any: expression_if_then_else .

    $default  reduce using rule 211 (expression_any)


State 578

  206 expression_any: expression_for_loop .

    $default  reduce using rule 206 (expression_any)


State 579

  203 expression_any: expression_unsafe .

    $default  reduce using rule 203 (expression_any)


State 580

  202 expression_any: expression_while_loop .

    $default  reduce using rule 202 (expression_any)


State 581

  204 expression_any: expression_with .

    $default  reduce using rule 204 (expression_any)


State 582

  205 expression_any: expression_with_alias .

    $default  reduce using rule 205 (expression_any)


State 583

  217 expressions: expressions expression_any .

    $default  reduce using rule 217 (expressions)


State 584

  197 expression_any: expr_pipe .

    $default  reduce using rule 197 (expression_any)


State 585

  200 expression_any: expression_delete . ';'

    ';'  shift, and go to state 770


State 586

   64 expression_if_one_liner: expression_break .
  207 expression_any: expression_break . ';'

    ';'  shift, and go to state 771

    $default  reduce using rule 64 (expression_if_one_liner)


State 587

   65 expression_if_one_liner: expression_continue .
  208 expression_any: expression_continue . ';'

    ';'  shift, and go to state 772

    $default  reduce using rule 65 (expression_if_one_liner)


State 588

   62 expression_if_one_liner: expression_return_no_pipe .
  236 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 773

    $default  reduce using rule 62 (expression_if_one_liner)


State 589

  209 expression_any: expression_return .

    $default  reduce using rule 209 (expression_any)


State 590

   63 expression_if_one_liner: expression_yield_no_pipe .
  241 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 774

    $default  reduce using rule 63 (expression_if_one_liner)


State 591

  210 expression_any: expression_yield .

    $default  reduce using rule 210 (expression_any)


State 592

  212 expression_any: expression_try_catch .

    $default  reduce using rule 212 (expression_any)


State 593

  247 expression_let: kwd_let . let_variable_declaration

    "$i"    shift, and go to state 326
    "name"  shift, and go to state 327

    let_variable_name_with_pos_list  go to state 328
    let_variable_declaration         go to state 775


State 594

  201 expression_any: expression_let .

    $default  reduce using rule 201 (expression_any)


State 595

  199 expression_any: expr_assign . ';'
  219 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 776
    ';'    shift, and go to state 777


State 596

  198 expression_any: expr_assign_pipe .

    $default  reduce using rule 198 (expression_any)


State 597

   61 expression_if_one_liner: expr .
  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  306 expr_assign_pipe: expr . '=' "@ <|" expr
  307                 | expr . '=' "@@ <|" expr
  308                 | expr . "<-" "@ <|" expr
  309                 | expr . "<-" "@@ <|" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 788
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 795
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    "if"      reduce using rule 61 (expression_if_one_liner)
    $default  reduce using rule 287 (expr_assign)


State 598

  493 enum_list: enum_list . "name" ';'
  494          | enum_list . "name" '=' expr ';'
  506 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 432
    '}'     shift, and go to state 796


State 599

  494 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 797
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 600

  493 enum_list: enum_list "name" ';' .

    $default  reduce using rule 493 (enum_list)


State 601

  508 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 508 (optional_structure_parent)


State 602

  440 struct_variable_declaration_list: struct_variable_declaration_list . $@26 structure_variable_declaration ';'
  442                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  444                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block
  445                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 798
    '}'  shift, and go to state 799

    "def"     reduce using rule 103 (optional_annotation_list)
    $default  reduce using rule 439 ($@26)

    optional_annotation_list  go to state 800
    $@26                      go to state 801


State 603

  483 global_variable_declaration_list: global_variable_declaration_list $@29 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 483 (global_variable_declaration_list)


State 604

  428 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 428 (optional_field_annotation)


State 605

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  472 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 802


State 606

  473 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 473 (let_variable_name_with_pos_list)


State 607

  474 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  475                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 803

    $default  reduce using rule 474 (let_variable_name_with_pos_list)


State 608

  476 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration . ';'
  477                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr ';'
  478                         | let_variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr_pipe
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 609
    "??"        shift, and go to state 245
    ":="        shift, and go to state 610
    '='         shift, and go to state 804
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    ';'         shift, and go to state 805
    '#'         shift, and go to state 251

    copy_or_move_or_clone  go to state 806


State 609

  467 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 467 (copy_or_move_or_clone)


State 610

  468 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 468 (copy_or_move_or_clone)


State 611

  466 copy_or_move_or_clone: '=' .

    $default  reduce using rule 466 (copy_or_move_or_clone)


State 612

  479 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  480                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 807
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 808
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 613

  590 type_declaration: "array" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 589 ($@39)

    $@39  go to state 809


State 614

  593 type_declaration: "table" '<' $@40 table_type_pair '>' . $@41

    $default  reduce using rule 592 ($@41)

    $@41  go to state 810


State 615

  566 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 811


State 616

  596 type_declaration: "iterator" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 595 ($@43)

    $@43  go to state 812


State 617

  586 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 585 ($@37)

    $@37  go to state 813


State 618

  564 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 563 ($@35)

    $@35  go to state 814


State 619

  561 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 416


State 620

  600 type_declaration: "block" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 599 ($@45)

    $@45  go to state 815


State 621

  603 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type . '>' $@47

    '>'  shift, and go to state 816


State 622

  607 type_declaration: "function" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 606 ($@49)

    $@49  go to state 817


State 623

  610 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type . '>' $@51

    '>'  shift, and go to state 818


State 624

  614 type_declaration: "lambda" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 613 ($@53)

    $@53  go to state 819


State 625

  617 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 820


State 626

  452 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 821


State 627

  620 type_declaration: "tuple" '<' $@56 tuple_type_list '>' . $@57

    $default  reduce using rule 619 ($@57)

    $@57  go to state 822


State 628

  454 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 458

    name_in_namespace           go to state 177
    tuple_type                  go to state 823
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 461


State 629

  623 type_declaration: "variant" '<' $@58 variant_type_list '>' . $@59

    $default  reduce using rule 622 ($@59)

    $@59  go to state 824


State 630

  457 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 253

    variant_type  go to state 542


State 631

  228 expr_new: "new" type_declaration '(' . ')'
  229         | "new" type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 825
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 826
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 632

  260 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  261               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  262               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '<'                               shift, and go to state 827
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 828
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 633

  259 expr_type_decl: "type" '<' $@12 . type_declaration '>' $@13

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 829


State 634

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  380     | "deref" '(' expr . ')'
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 830


State 635

  250 expr_cast: "cast" '<' $@6 . type_declaration '>' $@7 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 831


State 636

  253 expr_cast: "upcast" '<' $@8 . type_declaration '>' $@9 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 832


State 637

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  381     | "addr" '(' expr . ')'
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 833


State 638

  256 expr_cast: "reinterpret" '<' $@10 . type_declaration '>' $@11 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 834


State 639

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  411     | "unsafe" '(' expr . ')'
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 835


State 640

  382 expr: "generator" '<' type_declaration . '>' optional_capture_list '(' ')'
  383     | "generator" '<' type_declaration . '>' optional_capture_list '(' expr ')'
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 836
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 641

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  412 expr_mtag: "$$" '(' expr . ')'
  419          | expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 837


State 642

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  413 expr_mtag: "$i" '(' expr . ')'
  419          | expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 838


State 643

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  414 expr_mtag: "$v" '(' expr . ')'
  419          | expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 839


State 644

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  415 expr_mtag: "$b" '(' expr . ')'
  419          | expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 840


State 645

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  416 expr_mtag: "$a" '(' expr . ')'
  419          | expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 841


State 646

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  417 expr_mtag: "$c" '(' expr . ')' '(' ')'
  418          | "$c" '(' expr . ')' '(' expr_list ')'
  419          | expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 842


State 647

  523 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  524                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  662 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 843
    ','   shift, and go to state 737


State 648

  640 optional_block: "where" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 762
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 844


State 649

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"
  633 make_struct_fields: "name" . copy_or_move expr
  634                   | "name" . ":=" expr

    "<-"  shift, and go to state 736
    ":="  shift, and go to state 845
    "::"  shift, and go to state 80
    '='   shift, and go to state 738

    $default  reduce using rule 222 (name_in_namespace)

    copy_or_move  go to state 846


State 650

  340 expr: '-' . expr
  573 type_declaration: type_declaration '-' . '[' ']'
  576                 | type_declaration '-' . "const"
  578                 | type_declaration '-' . '&'
  581                 | type_declaration '-' . '#'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "const"                           shift, and go to state 410
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '&'                               shift, and go to state 411
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '['                               shift, and go to state 412
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311
    '#'                               shift, and go to state 413

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 490
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 651

  367 expr: '(' . expr ')'
  643 make_struct_decl: "[[" type_declaration '(' . ')' optional_block ']' ']'
  644                 | "[[" type_declaration '(' . ')' make_struct_dim optional_block ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 847
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 652

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  647 make_tuple: expr .
  649 make_map_tuple: expr . "=>" expr
  650               | expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "=>"   shift, and go to state 664
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ']'       reduce using rule 647 (make_tuple)
    ']'       [reduce using rule 650 (make_map_tuple)]
    ';'       reduce using rule 647 (make_tuple)
    ';'       [reduce using rule 650 (make_map_tuple)]
    '}'       reduce using rule 647 (make_tuple)
    '}'       [reduce using rule 650 (make_map_tuple)]
    $default  reduce using rule 647 (make_tuple)


State 653

  635 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  636                   | make_struct_fields . ',' "name" ":=" expr
  637 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 848

    $default  reduce using rule 637 (make_struct_dim)


State 654

  638 make_struct_dim: make_struct_dim . ';' make_struct_fields
  641 make_struct_decl: "[[" type_declaration make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 849

    $default  reduce using rule 639 (optional_block)

    optional_block  go to state 850


State 655

  642 make_struct_decl: "[[" type_declaration optional_block . ']' ']'

    ']'  shift, and go to state 851


State 656

  648 make_tuple: make_tuple . ',' expr
  651 make_any_tuple: make_tuple .

    ','  shift, and go to state 852

    $default  reduce using rule 651 (make_any_tuple)


State 657

  652 make_any_tuple: make_map_tuple .

    $default  reduce using rule 652 (make_any_tuple)


State 658

  653 make_dim: make_any_tuple .

    $default  reduce using rule 653 (make_dim)


State 659

  654 make_dim: make_dim . ';' make_any_tuple
  655 make_dim_decl: "[[" type_declaration make_dim . ']' ']'

    ']'  shift, and go to state 853
    ';'  shift, and go to state 854


State 660

  523 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  524                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  663 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 855
    ','   shift, and go to state 737


State 661

  367 expr: '(' . expr ')'
  646 make_struct_decl: "[{" type_declaration '(' . ')' make_struct_dim optional_block '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 856
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 496
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 662

  638 make_struct_dim: make_struct_dim . ';' make_struct_fields
  645 make_struct_decl: "[{" type_declaration make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 849

    $default  reduce using rule 639 (optional_block)

    optional_block  go to state 857


State 663

  654 make_dim: make_dim . ';' make_any_tuple
  656 make_dim_decl: "[{" type_declaration make_dim . '}' ']'

    ';'  shift, and go to state 854
    '}'  shift, and go to state 858


State 664

  649 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 859
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 665

  658 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 486
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_map_tuple          go to state 860
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 666

  659 make_table_decl: "{{" make_table '}' . '}'

    '}'  shift, and go to state 861


State 667

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 668

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 862
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 669

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 225
    STRING_CHARACTER_ESC  shift, and go to state 226

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 670

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 863

    reader_character_sequence  go to state 864


State 671

  367 expr: '(' expr ')' .

    $default  reduce using rule 367 (expr)


State 672

  314 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 865


State 673

  426 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 866


State 674

  318 func_addr_expr: '@' '@' '<' . $@14 type_declaration '>' $@15 func_addr_name
  321               | '@' '@' '<' . $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name

    ':'       reduce using rule 319 ($@16)
    '>'       reduce using rule 319 ($@16)
    '('       reduce using rule 319 ($@16)
    $default  reduce using rule 316 ($@14)

    $@14  go to state 867
    $@16  go to state 868


State 675

  313 func_addr_name: name_in_namespace .

    $default  reduce using rule 313 (func_addr_name)


State 676

  315 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 315 (func_addr_expr)


State 677

  310 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "name"  shift, and go to state 869

    make_struct_fields  go to state 870


State 678

  375 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 375 (expr)


State 679

  264 expr_list: expr_list . ',' expr
  376 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 872


State 680

  263 expr_list: expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 263 (expr_list)


State 681

  278 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 873
    ":="  shift, and go to state 874
    '='   shift, and go to state 875
    '&'   shift, and go to state 876

    capture_entry  go to state 877
    capture_list   go to state 878


State 682

  280 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 879


State 683

  388 expr: expr "is" "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 880


State 684

  425 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 881


State 685

  390 expr: expr "is" "name" .

    $default  reduce using rule 390 (expr)


State 686

  389 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 389 (expr)


State 687

  394 expr: expr "as" "type" . '<' $@22 type_declaration '>' $@23

    '<'  shift, and go to state 882


State 688

  423 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 883


State 689

  391 expr: expr "as" "name" .

    $default  reduce using rule 391 (expr)


State 690

  395 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 395 (expr)


State 691

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  341     | expr "<<" expr .
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 341 (expr)


State 692

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  342     | expr ">>" expr .
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 342 (expr)


State 693

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  354     | expr "<=" expr .
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 354 (expr)


State 694

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  355     | expr ">=" expr .
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 355 (expr)


State 695

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  352     | expr "==" expr .
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 352 (expr)


State 696

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  353     | expr "!=" expr .
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 353 (expr)


State 697

  311 expr_method_call: expr "->" "name" . '(' ')'
  312                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 884


State 698

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  384     | expr "??" expr .
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 384 (expr)


State 699

  420 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 885


State 700

  372 expr: expr "?." "name" .

    $default  reduce using rule 372 (expr)


State 701

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  370     | expr "?[" expr . ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 886


State 702

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  408     | expr "<|" expr .
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 408 (expr)


State 703

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  409     | expr "|>" expr .
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 511
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 409 (expr)


State 704

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  343     | expr "<<<" expr .
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 343 (expr)


State 705

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  344     | expr ">>>" expr .
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '-'   shift, and go to state 529
    '+'   shift, and go to state 530
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 344 (expr)


State 706

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  359     | expr "&&" expr .
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 359 (expr)


State 707

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  360     | expr "||" expr .
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "^^"   shift, and go to state 521
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 360 (expr)


State 708

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  361     | expr "^^" expr .
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 361 (expr)


State 709

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  362     | expr ".." expr .
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 362 (expr)


State 710

  396 expr: expr '?' "as" . "name"
  399     | expr '?' "as" . "type" '<' $@24 type_declaration '>' $@25
  400     | expr '?' "as" . basic_type_declaration
  424 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 887
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 357
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 888
    "name"      shift, and go to state 889

    basic_type_declaration  go to state 890


State 711

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  385     | expr '?' expr . ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    ':'    shift, and go to state 891
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 712

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  357     | expr '|' expr .
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 357 (expr)


State 713

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  358     | expr '^' expr .
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 358 (expr)


State 714

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  356     | expr '&' expr .
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 356 (expr)


State 715

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  350     | expr '<' expr .
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 350 (expr)


State 716

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  351     | expr '>' expr .
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 351 (expr)


State 717

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  346     | expr '-' expr .
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 346 (expr)


State 718

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  345     | expr '+' expr .
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '*'   shift, and go to state 531
    '/'   shift, and go to state 532
    '%'   shift, and go to state 533
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 345 (expr)


State 719

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  347     | expr '*' expr .
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 347 (expr)


State 720

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  348     | expr '/' expr .
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 348 (expr)


State 721

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  349     | expr '%' expr .
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 501
    "as"  shift, and go to state 502
    "++"  shift, and go to state 505
    "--"  shift, and go to state 506
    "->"  shift, and go to state 511
    "??"  shift, and go to state 512
    "?."  shift, and go to state 513
    "?["  shift, and go to state 514
    "<|"  shift, and go to state 515
    "|>"  shift, and go to state 516
    '.'   shift, and go to state 534
    '['   shift, and go to state 535

    $default  reduce using rule 349 (expr)


State 722

  373 expr: expr '.' "?." . "name"
  422 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 892
    "name"  shift, and go to state 893


State 723

  371 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 894
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 724

  419 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 895


State 725

  322 expr_field: expr '.' "name" .

    $default  reduce using rule 322 (expr_field)


State 726

  323 expr_field: expr '.' '.' . "name"
  421 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 896
    "name"  shift, and go to state 897


State 727

  369 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 898
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 728

  326 expr_field: expr '.' $@18 . error $@19

    error  shift, and go to state 899


State 729

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  368     | expr '[' expr . ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 900


State 730

  377 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 377 (expr)


State 731

  264 expr_list: expr_list . ',' expr
  378 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 901


State 732

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  448 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 902


State 733

  447 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 447 (function_argument_declaration)


State 734

  521 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 903
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 735

  522 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 904


State 736

  459 copy_or_move: "<-" .

    $default  reduce using rule 459 (copy_or_move)


State 737

  523 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  524                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 905


State 738

  458 copy_or_move: '=' .

    $default  reduce using rule 458 (copy_or_move)


State 739

  462 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  463                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 906


State 740

  461 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 461 (variable_declaration)


State 741

  464 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  465                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 907
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 908
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 742

  450 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 450 (function_argument_list)


State 743

   71 expression_while_loop: "while" expr . expression_block
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 909


State 744

   69 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  523 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  524                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 910
    ','   shift, and go to state 737


State 745

  235 expression_return_no_pipe: "return" "<-" . expr
  238 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 911
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 912
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 746

  237 expression_return: "return" expr_pipe .

    $default  reduce using rule 237 (expression_return)


State 747

  219 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 776


State 748

  234 expression_return_no_pipe: "return" expr .
  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 913
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 914
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 287 (expr_assign)
    $default  reduce using rule 234 (expression_return_no_pipe)


State 749

  244 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 915


State 750

  226 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 916
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 751

  225 expression_delete: "delete" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 225 (expression_delete)


State 752

   72 expression_with: "with" expr . expression_block
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 917


State 753

   74 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 918


State 754

  215 expression_any: "pass" ';' .

    $default  reduce using rule 215 (expression_any)


State 755

   48 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 919


State 756

   49 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 920


State 757

   50 expression_goto: "goto" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 50 (expression_goto)


State 758

   70 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 70 (expression_unsafe)


State 759

  240 expression_yield_no_pipe: "yield" "<-" . expr
  243 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 921
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 922
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 760

  242 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 242 (expression_yield)


State 761

  239 expression_yield_no_pipe: "yield" expr .
  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 913
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 914
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 287 (expr_assign)
    $default  reduce using rule 239 (expression_yield_no_pipe)


State 762

  269 block_or_lambda: '@' .
  270                | '@' . '@'

    '@'  shift, and go to state 923

    $default  reduce using rule 269 (block_or_lambda)


State 763

  220 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 220 (expr_pipe)


State 764

  221 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 221 (expr_pipe)


State 765

  195 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 924


State 766

  213 expression_any: expression_label ';' .

    $default  reduce using rule 213 (expression_any)


State 767

  214 expression_any: expression_goto ';' .

    $default  reduce using rule 214 (expression_any)


State 768

   66 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 925


State 769

   68 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 67 ($@3)

    $@3  go to state 926


State 770

  200 expression_any: expression_delete ';' .

    $default  reduce using rule 200 (expression_any)


State 771

  207 expression_any: expression_break ';' .

    $default  reduce using rule 207 (expression_any)


State 772

  208 expression_any: expression_continue ';' .

    $default  reduce using rule 208 (expression_any)


State 773

  236 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 236 (expression_return)


State 774

  241 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 241 (expression_yield)


State 775

  247 expression_let: kwd_let let_variable_declaration .

    $default  reduce using rule 247 (expression_let)


State 776

  219 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 384
    '@'  shift, and go to state 762
    '{'  shift, and go to state 311

    expression_block  go to state 388
    block_or_lambda   go to state 394
    expr_block        go to state 927


State 777

  199 expression_any: expr_assign ';' .

    $default  reduce using rule 199 (expression_any)


State 778

  297 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 928
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 779

  298 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 929
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 780

  300 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 930
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 781

  299 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 931
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 782

  301 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 932
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 783

  291 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 933
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 784

  292 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 934
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 785

  293 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 935
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 786

  302 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 936
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 787

  303 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 937
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 788

  289 expr_assign: expr "<-" . expr
  308 expr_assign_pipe: expr "<-" . "@ <|" expr
  309                 | expr "<-" . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 938
    "@@ <|"                           shift, and go to state 939
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 940
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 789

  290 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 941
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 790

  304 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 942
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 791

  305 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 943
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 792

  294 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 944
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 793

  295 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 945
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 794

  296 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 946
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 795

  288 expr_assign: expr '=' . expr
  306 expr_assign_pipe: expr '=' . "@ <|" expr
  307                 | expr '=' . "@@ <|" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 947
    "@@ <|"                           shift, and go to state 948
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 949
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 796

  506 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 506 (enum_declaration)


State 797

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  494 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 950


State 798

  104 optional_annotation_list: '[' . annotation_list ']'
  445 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 951
    name_in_namespace            go to state 55


State 799

  519 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 519 (structure_declaration)


State 800

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  444                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block

    "def"  shift, and go to state 952


State 801

  440 struct_variable_declaration_list: struct_variable_declaration_list $@26 . structure_variable_declaration ';'

    "[["  shift, and go to state 223

    $default  reduce using rule 427 (optional_field_annotation)

    optional_field_annotation       go to state 953
    structure_variable_declaration  go to state 954


State 802

  472 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 472 (let_variable_name_with_pos_list)


State 803

  475 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 955


State 804

  466 copy_or_move_or_clone: '=' .
  582 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 466 (copy_or_move_or_clone)


State 805

  476 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration ';' .

    $default  reduce using rule 476 (let_variable_declaration)


State 806

  477 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr ';'
  478                         | let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    expr_pipe               go to state 956
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_assign             go to state 747
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 957
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 807

  480 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 480 (let_variable_declaration)


State 808

  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  479 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 913
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 914
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 958

    $default  reduce using rule 287 (expr_assign)


State 809

  590 type_declaration: "array" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 590 (type_declaration)


State 810

  593 type_declaration: "table" '<' $@40 table_type_pair '>' $@41 .

    $default  reduce using rule 593 (type_declaration)


State 811

  566 table_type_pair: type_declaration ';' type_declaration .
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 566 (table_type_pair)


State 812

  596 type_declaration: "iterator" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 596 (type_declaration)


State 813

  586 type_declaration: "smart_ptr" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 586 (type_declaration)


State 814

  564 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 564 (bitfield_type_declaration)


State 815

  600 type_declaration: "block" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 600 (type_declaration)


State 816

  603 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' . $@47

    $default  reduce using rule 602 ($@47)

    $@47  go to state 959


State 817

  607 type_declaration: "function" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 607 (type_declaration)


State 818

  610 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' . $@51

    $default  reduce using rule 609 ($@51)

    $@51  go to state 960


State 819

  614 type_declaration: "lambda" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 614 (type_declaration)


State 820

  617 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 616 ($@55)

    $@55  go to state 961


State 821

  452 tuple_type: "name" ':' type_declaration .
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 452 (tuple_type)


State 822

  620 type_declaration: "tuple" '<' $@56 tuple_type_list '>' $@57 .

    $default  reduce using rule 620 (type_declaration)


State 823

  454 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 454 (tuple_type_list)


State 824

  623 type_declaration: "variant" '<' $@58 variant_type_list '>' $@59 .

    $default  reduce using rule 623 (type_declaration)


State 825

  228 expr_new: "new" type_declaration '(' ')' .

    $default  reduce using rule 228 (expr_new)


State 826

  229 expr_new: "new" type_declaration '(' expr_list . ')'
  264 expr_list: expr_list . ',' expr

    ','  shift, and go to state 871
    ')'  shift, and go to state 962


State 827

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  262               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 963


State 828

  260 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 964


State 829

  259 expr_type_decl: "type" '<' $@12 type_declaration . '>' $@13
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 965
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 830

  380 expr: "deref" '(' expr ')' .

    $default  reduce using rule 380 (expr)


State 831

  250 expr_cast: "cast" '<' $@6 type_declaration . '>' $@7 expr
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 966
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 832

  253 expr_cast: "upcast" '<' $@8 type_declaration . '>' $@9 expr
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 967
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 833

  381 expr: "addr" '(' expr ')' .

    $default  reduce using rule 381 (expr)


State 834

  256 expr_cast: "reinterpret" '<' $@10 type_declaration . '>' $@11 expr
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 968
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 835

  411 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 411 (expr)


State 836

  382 expr: "generator" '<' type_declaration '>' . optional_capture_list '(' ')'
  383     | "generator" '<' type_declaration '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 681

    $default  reduce using rule 277 (optional_capture_list)

    optional_capture_list  go to state 969


State 837

  412 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 412 (expr_mtag)


State 838

  413 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 413 (expr_mtag)


State 839

  414 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 414 (expr_mtag)


State 840

  415 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 415 (expr_mtag)


State 841

  416 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 416 (expr_mtag)


State 842

  417 expr_mtag: "$c" '(' expr ')' . '(' ')'
  418          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 970


State 843

  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 971
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 844

  640 optional_block: "where" expr_block .

    $default  reduce using rule 640 (optional_block)


State 845

  634 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 972
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 846

  633 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 973
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 847

  643 make_struct_decl: "[[" type_declaration '(' ')' . optional_block ']' ']'
  644                 | "[[" type_declaration '(' ')' . make_struct_dim optional_block ']' ']'

    "where"  shift, and go to state 648
    "name"   shift, and go to state 869

    $default  reduce using rule 639 (optional_block)

    make_struct_fields  go to state 653
    make_struct_dim     go to state 974
    optional_block      go to state 975


State 848

  635 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  636                   | make_struct_fields ',' . "name" ":=" expr

    "name"  shift, and go to state 976


State 849

  638 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "name"  shift, and go to state 869

    make_struct_fields  go to state 977


State 850

  641 make_struct_decl: "[[" type_declaration make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 978


State 851

  642 make_struct_decl: "[[" type_declaration optional_block ']' . ']'

    ']'  shift, and go to state 979


State 852

  648 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 980
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 853

  655 make_dim_decl: "[[" type_declaration make_dim ']' . ']'

    ']'  shift, and go to state 981


State 854

  654 make_dim: make_dim ';' . make_any_tuple

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 652
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_tuple              go to state 656
    make_map_tuple          go to state 657
    make_any_tuple          go to state 982
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 855

  663 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 983
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 856

  646 make_struct_decl: "[{" type_declaration '(' ')' . make_struct_dim optional_block '}' ']'

    "name"  shift, and go to state 869

    make_struct_fields  go to state 653
    make_struct_dim     go to state 984


State 857

  645 make_struct_decl: "[{" type_declaration make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 985


State 858

  656 make_dim_decl: "[{" type_declaration make_dim '}' . ']'

    ']'  shift, and go to state 986


State 859

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  649 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 649 (make_map_tuple)


State 860

  658 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 658 (make_table)


State 861

  659 make_table_decl: "{{" make_table '}' '}' .

    $default  reduce using rule 659 (make_table_decl)


State 862

   27 string_builder_body: string_builder_body "{" expr . "}"
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    "}"    shift, and go to state 987
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535


State 863

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 864

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 988

    $default  reduce using rule 32 (expr_reader)


State 865

  314 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 989
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 866

  426 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 990
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 867

  318 func_addr_expr: '@' '@' '<' $@14 . type_declaration '>' $@15 func_addr_name

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 991


State 868

  321 func_addr_expr: '@' '@' '<' $@16 . optional_function_argument_list optional_function_type '>' $@17 func_addr_name

    '('  shift, and go to state 309

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 992


State 869

  633 make_struct_fields: "name" . copy_or_move expr
  634                   | "name" . ":=" expr

    "<-"  shift, and go to state 736
    ":="  shift, and go to state 845
    '='   shift, and go to state 738

    copy_or_move  go to state 846


State 870

  310 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  635 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  636                   | make_struct_fields . ',' "name" ":=" expr

    ','  shift, and go to state 848
    ']'  shift, and go to state 993


State 871

  264 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 994
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 872

  376 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 376 (expr)


State 873

  273 capture_entry: "<-" . "name"

    "name"  shift, and go to state 995


State 874

  274 capture_entry: ":=" . "name"

    "name"  shift, and go to state 996


State 875

  272 capture_entry: '=' . "name"

    "name"  shift, and go to state 997


State 876

  271 capture_entry: '&' . "name"

    "name"  shift, and go to state 998


State 877

  275 capture_list: capture_entry .

    $default  reduce using rule 275 (capture_list)


State 878

  276 capture_list: capture_list . ',' capture_entry
  278 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 999
    ']'  shift, and go to state 1000


State 879

  280 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 1001


State 880

  388 expr: expr "is" "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 386 ($@20)

    $@20  go to state 1002


State 881

  425 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1003
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 882

  394 expr: expr "as" "type" '<' . $@22 type_declaration '>' $@23

    $default  reduce using rule 392 ($@22)

    $@22  go to state 1004


State 883

  423 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1005
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 884

  311 expr_method_call: expr "->" "name" '(' . ')'
  312                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1006
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1007
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 885

  420 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1008
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 886

  370 expr: expr "?[" expr ']' .

    $default  reduce using rule 370 (expr)


State 887

  399 expr: expr '?' "as" "type" . '<' $@24 type_declaration '>' $@25

    '<'  shift, and go to state 1009


State 888

  424 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1010


State 889

  396 expr: expr '?' "as" "name" .

    $default  reduce using rule 396 (expr)


State 890

  400 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 400 (expr)


State 891

  385 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1011
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 892

  422 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1012


State 893

  373 expr: expr '.' "?." "name" .

    $default  reduce using rule 373 (expr)


State 894

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  371     | expr '.' "?[" expr . ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1013


State 895

  419 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1014
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 896

  421 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1015


State 897

  323 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 323 (expr_field)


State 898

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  369     | expr '.' '[' expr . ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ']'    shift, and go to state 1016


State 899

  326 expr_field: expr '.' $@18 error . $@19

    $default  reduce using rule 325 ($@19)

    $@19  go to state 1017


State 900

  368 expr: expr '[' expr ']' .

    $default  reduce using rule 368 (expr)


State 901

  378 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 378 (expr)


State 902

  448 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 448 (function_argument_declaration)


State 903

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  521 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1018


State 904

  522 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 522 (variable_name_with_pos_list)


State 905

  523 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  524                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1019

    $default  reduce using rule 523 (variable_name_with_pos_list)


State 906

  462 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  463                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "<-"        shift, and go to state 736
    "??"        shift, and go to state 245
    '='         shift, and go to state 1020
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251

    $default  reduce using rule 462 (variable_declaration)

    copy_or_move  go to state 1021


State 907

  465 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 465 (variable_declaration)


State 908

  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  464 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 913
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 914
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 287 (expr_assign)
    $default  reduce using rule 464 (variable_declaration)


State 909

   71 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 71 (expression_while_loop)


State 910

   69 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1022
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 911

  238 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 238 (expression_return)


State 912

  235 expression_return_no_pipe: "return" "<-" expr .
  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 913
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 914
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 287 (expr_assign)
    $default  reduce using rule 235 (expression_return_no_pipe)


State 913

  289 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 940
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 914

  288 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 949
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 915

  244 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1023


State 916

  226 expression_delete: "delete" "explicit" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 226 (expression_delete)


State 917

   72 expression_with: "with" expr expression_block .

    $default  reduce using rule 72 (expression_with)


State 918

   74 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 73 ($@4)

    $@4  go to state 1024


State 919

   48 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 48 (expression_label)


State 920

   49 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 49 (expression_goto)


State 921

  243 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 243 (expression_yield)


State 922

  240 expression_yield_no_pipe: "yield" "<-" expr .
  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 913
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 914
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    " <|"     reduce using rule 287 (expr_assign)
    $default  reduce using rule 240 (expression_yield_no_pipe)


State 923

  270 block_or_lambda: '@' '@' .

    $default  reduce using rule 270 (block_or_lambda)


State 924

  195 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 216 (expressions)

    expressions  go to state 1025


State 925

   66 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1026
    "elif"         shift, and go to state 1027
    "static_elif"  shift, and go to state 1028

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1029
    expression_else      go to state 1030


State 926

   68 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1031
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 927

  219 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 219 (expr_pipe)


State 928

  297 expr_assign: expr "+=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 297 (expr_assign)


State 929

  298 expr_assign: expr "-=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 298 (expr_assign)


State 930

  300 expr_assign: expr "/=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 300 (expr_assign)


State 931

  299 expr_assign: expr "*=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 299 (expr_assign)


State 932

  301 expr_assign: expr "%=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 301 (expr_assign)


State 933

  291 expr_assign: expr "&=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 291 (expr_assign)


State 934

  292 expr_assign: expr "|=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 292 (expr_assign)


State 935

  293 expr_assign: expr "^=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 293 (expr_assign)


State 936

  302 expr_assign: expr "<<=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 302 (expr_assign)


State 937

  303 expr_assign: expr ">>=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 303 (expr_assign)


State 938

  308 expr_assign_pipe: expr "<-" "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1032
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 939

  309 expr_assign_pipe: expr "<-" "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1033
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 940

  289 expr_assign: expr "<-" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 289 (expr_assign)


State 941

  290 expr_assign: expr ":=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 290 (expr_assign)


State 942

  304 expr_assign: expr "<<<=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 304 (expr_assign)


State 943

  305 expr_assign: expr ">>>=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 305 (expr_assign)


State 944

  294 expr_assign: expr "&&=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 294 (expr_assign)


State 945

  295 expr_assign: expr "||=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 295 (expr_assign)


State 946

  296 expr_assign: expr "^^=" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 296 (expr_assign)


State 947

  306 expr_assign_pipe: expr '=' "@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1034
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 948

  307 expr_assign_pipe: expr '=' "@@ <|" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1035
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 949

  288 expr_assign: expr '=' expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 288 (expr_assign)


State 950

  494 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 494 (enum_list)


State 951

  102 annotation_list: annotation_list . ',' annotation_declaration
  104 optional_annotation_list: '[' annotation_list . ']'
  445 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 82
    ']'  shift, and go to state 1036


State 952

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';'
  444                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block

    "public"   shift, and go to state 1037
    "private"  shift, and go to state 1038

    $default  reduce using rule 434 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1039


State 953

  437 structure_variable_declaration: optional_field_annotation . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1040
    "sealed"    shift, and go to state 1041

    $default  reduce using rule 429 (optional_override)

    optional_override  go to state 1042


State 954

  440 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration . ';'

    ';'  shift, and go to state 1043


State 955

  475 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 475 (let_variable_name_with_pos_list)


State 956

  478 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 478 (let_variable_declaration)


State 957

  287 expr_assign: expr .
  288            | expr . '=' expr
  289            | expr . "<-" expr
  290            | expr . ":=" expr
  291            | expr . "&=" expr
  292            | expr . "|=" expr
  293            | expr . "^=" expr
  294            | expr . "&&=" expr
  295            | expr . "||=" expr
  296            | expr . "^^=" expr
  297            | expr . "+=" expr
  298            | expr . "-=" expr
  299            | expr . "*=" expr
  300            | expr . "/=" expr
  301            | expr . "%=" expr
  302            | expr . "<<=" expr
  303            | expr . ">>=" expr
  304            | expr . "<<<=" expr
  305            | expr . ">>>=" expr
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  477 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    "<<="   shift, and go to state 786
    ">>="   shift, and go to state 787
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "<-"    shift, and go to state 913
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "<<<="  shift, and go to state 790
    ">>>="  shift, and go to state 791
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    "&&="   shift, and go to state 792
    "||="   shift, and go to state 793
    "^^="   shift, and go to state 794
    ".."    shift, and go to state 522
    '='     shift, and go to state 914
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535
    ';'     shift, and go to state 1044

    $default  reduce using rule 287 (expr_assign)


State 958

  479 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 479 (let_variable_declaration)


State 959

  603 type_declaration: "block" '<' $@46 optional_function_argument_list optional_function_type '>' $@47 .

    $default  reduce using rule 603 (type_declaration)


State 960

  610 type_declaration: "function" '<' $@50 optional_function_argument_list optional_function_type '>' $@51 .

    $default  reduce using rule 610 (type_declaration)


State 961

  617 type_declaration: "lambda" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 617 (type_declaration)


State 962

  229 expr_new: "new" type_declaration '(' expr_list ')' .

    $default  reduce using rule 229 (expr_new)


State 963

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  262               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1045
    ';'  shift, and go to state 1046


State 964

  260 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 260 (expr_type_info)


State 965

  259 expr_type_decl: "type" '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 258 ($@13)

    $@13  go to state 1047


State 966

  250 expr_cast: "cast" '<' $@6 type_declaration '>' . $@7 expr

    $default  reduce using rule 249 ($@7)

    $@7  go to state 1048


State 967

  253 expr_cast: "upcast" '<' $@8 type_declaration '>' . $@9 expr

    $default  reduce using rule 252 ($@9)

    $@9  go to state 1049


State 968

  256 expr_cast: "reinterpret" '<' $@10 type_declaration '>' . $@11 expr

    $default  reduce using rule 255 ($@11)

    $@11  go to state 1050


State 969

  382 expr: "generator" '<' type_declaration '>' optional_capture_list . '(' ')'
  383     | "generator" '<' type_declaration '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1051


State 970

  417 expr_mtag: "$c" '(' expr ')' '(' . ')'
  418          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1052
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    expr_list               go to state 1053
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 680
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 971

  264 expr_list: expr_list . ',' expr
  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 871
    ';'  shift, and go to state 1054


State 972

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  634 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 634 (make_struct_fields)


State 973

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  633 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 633 (make_struct_fields)


State 974

  638 make_struct_dim: make_struct_dim . ';' make_struct_fields
  644 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 849

    $default  reduce using rule 639 (optional_block)

    optional_block  go to state 1055


State 975

  643 make_struct_decl: "[[" type_declaration '(' ')' optional_block . ']' ']'

    ']'  shift, and go to state 1056


State 976

  635 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  636                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 736
    ":="  shift, and go to state 1057
    '='   shift, and go to state 738

    copy_or_move  go to state 1058


State 977

  635 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  636                   | make_struct_fields . ',' "name" ":=" expr
  638 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 848

    $default  reduce using rule 638 (make_struct_dim)


State 978

  641 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1059


State 979

  642 make_struct_decl: "[[" type_declaration optional_block ']' ']' .

    $default  reduce using rule 642 (make_struct_decl)


State 980

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  648 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 648 (make_tuple)


State 981

  655 make_dim_decl: "[[" type_declaration make_dim ']' ']' .

    $default  reduce using rule 655 (make_dim_decl)


State 982

  654 make_dim: make_dim ';' make_any_tuple .

    $default  reduce using rule 654 (make_dim)


State 983

  264 expr_list: expr_list . ',' expr
  663 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 871
    ';'  shift, and go to state 1060


State 984

  638 make_struct_dim: make_struct_dim . ';' make_struct_fields
  646 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 648
    ';'      shift, and go to state 849

    $default  reduce using rule 639 (optional_block)

    optional_block  go to state 1061


State 985

  645 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1062


State 986

  656 make_dim_decl: "[{" type_declaration make_dim '}' ']' .

    $default  reduce using rule 656 (make_dim_decl)


State 987

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 988

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 989

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  314 func_addr_name: "$i" '(' expr . ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1063


State 990

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  426          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1064


State 991

  318 func_addr_expr: '@' '@' '<' $@14 type_declaration . '>' $@15 func_addr_name
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1065
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 992

  321 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list . optional_function_type '>' $@17 func_addr_name

    ':'  shift, and go to state 428

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 1066


State 993

  310 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1067


State 994

  264 expr_list: expr_list ',' expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 264 (expr_list)


State 995

  273 capture_entry: "<-" "name" .

    $default  reduce using rule 273 (capture_entry)


State 996

  274 capture_entry: ":=" "name" .

    $default  reduce using rule 274 (capture_entry)


State 997

  272 capture_entry: '=' "name" .

    $default  reduce using rule 272 (capture_entry)


State 998

  271 capture_entry: '&' "name" .

    $default  reduce using rule 271 (capture_entry)


State 999

  276 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 873
    ":="  shift, and go to state 874
    '='   shift, and go to state 875
    '&'   shift, and go to state 876

    capture_entry  go to state 1068


State 1000

  278 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1069


State 1001

  280 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1070
    '{'   shift, and go to state 311

    expression_block       go to state 1071
    block_or_simple_block  go to state 1072


State 1002

  388 expr: expr "is" "type" '<' $@20 . type_declaration '>' $@21

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1073


State 1003

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  425          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1074


State 1004

  394 expr: expr "as" "type" '<' $@22 . type_declaration '>' $@23

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1075


State 1005

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  423          | expr "as" "$f" '(' expr . ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1076


State 1006

  311 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 311 (expr_method_call)


State 1007

  264 expr_list: expr_list . ',' expr
  312 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 1077


State 1008

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  420          | expr "?." "$f" '(' expr . ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1078


State 1009

  399 expr: expr '?' "as" "type" '<' . $@24 type_declaration '>' $@25

    $default  reduce using rule 397 ($@24)

    $@24  go to state 1079


State 1010

  424 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1080
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1011

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  385     | expr '?' expr ':' expr .
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 385 (expr)


State 1012

  422 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1081
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1013

  371 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 371 (expr)


State 1014

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  419          | expr '.' "$f" '(' expr . ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1082


State 1015

  421 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1083
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1016

  369 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 369 (expr)


State 1017

  326 expr_field: expr '.' $@18 error $@19 .

    $default  reduce using rule 326 (expr_field)


State 1018

  521 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 521 (variable_name_with_pos_list)


State 1019

  524 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1084


State 1020

  458 copy_or_move: '=' .
  582 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 409

    $default  reduce using rule 458 (copy_or_move)


State 1021

  463 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1085
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1022

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  264 expr_list: expr_list . ',' expr

    ','  shift, and go to state 871
    ';'  shift, and go to state 1086


State 1023

  244 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 244 (expression_try_catch)


State 1024

   74 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1087
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1025

  195 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  217 expressions: expressions . expression_any
  218            | expressions . error

    error                             shift, and go to state 552
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 553
    "if"                              shift, and go to state 554
    "static_if"                       shift, and go to state 555
    "for"                             shift, and go to state 556
    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 557
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "try"                             shift, and go to state 559
    "delete"                          shift, and go to state 560
    "deref"                           shift, and go to state 351
    "with"                            shift, and go to state 561
    "assume"                          shift, and go to state 562
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "pass"                            shift, and go to state 564
    "reinterpret"                     shift, and go to state 355
    "label"                           shift, and go to state 565
    "goto"                            shift, and go to state 566
    "unsafe"                          shift, and go to state 567
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 568
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "@ <|"                            shift, and go to state 569
    "@@ <|"                           shift, and go to state 570
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    ';'                               shift, and go to state 571
    '{'                               shift, and go to state 311
    '}'                               shift, and go to state 1088

    string_builder             go to state 386
    expr_reader                go to state 387
    expression_label           go to state 573
    expression_goto            go to state 574
    if_or_static_if            go to state 575
    expression_if_one_liner    go to state 576
    expression_if_then_else    go to state 577
    expression_for_loop        go to state 578
    expression_unsafe          go to state 579
    expression_while_loop      go to state 580
    expression_with            go to state 581
    expression_with_alias      go to state 582
    expression_block           go to state 388
    expression_any             go to state 583
    expr_pipe                  go to state 584
    name_in_namespace          go to state 389
    expression_delete          go to state 585
    expr_new                   go to state 390
    expression_break           go to state 586
    expression_continue        go to state 587
    expression_return_no_pipe  go to state 588
    expression_return          go to state 589
    expression_yield_no_pipe   go to state 590
    expression_yield           go to state 591
    expression_try_catch       go to state 592
    kwd_let                    go to state 593
    expression_let             go to state 594
    expr_cast                  go to state 391
    expr_type_decl             go to state 392
    expr_type_info             go to state 393
    block_or_lambda            go to state 394
    expr_block                 go to state 395
    expr_numeric_const         go to state 396
    expr_assign                go to state 595
    expr_assign_pipe           go to state 596
    expr_named_call            go to state 397
    expr_method_call           go to state 398
    func_addr_expr             go to state 399
    expr_field                 go to state 400
    expr                       go to state 597
    expr_mtag                  go to state 402
    basic_type_declaration     go to state 403
    make_decl                  go to state 404
    make_struct_decl           go to state 405
    make_dim_decl              go to state 406
    make_table_decl            go to state 407
    array_comprehension        go to state 408


State 1026

   54 expression_else: "else" . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1089


State 1027

   51 elif_or_static_elif: "elif" .

    $default  reduce using rule 51 (elif_or_static_elif)


State 1028

   52 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 52 (elif_or_static_elif)


State 1029

   55 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1090
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1030

   66 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 66 (expression_if_then_else)


State 1031

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1091
    "is"    shift, and go to state 501
    "as"    shift, and go to state 502
    "<<"    shift, and go to state 503
    ">>"    shift, and go to state 504
    "++"    shift, and go to state 505
    "--"    shift, and go to state 506
    "<="    shift, and go to state 507
    ">="    shift, and go to state 508
    "=="    shift, and go to state 509
    "!="    shift, and go to state 510
    "->"    shift, and go to state 511
    "??"    shift, and go to state 512
    "?."    shift, and go to state 513
    "?["    shift, and go to state 514
    "<|"    shift, and go to state 515
    "|>"    shift, and go to state 516
    "<<<"   shift, and go to state 517
    ">>>"   shift, and go to state 518
    "&&"    shift, and go to state 519
    "||"    shift, and go to state 520
    "^^"    shift, and go to state 521
    ".."    shift, and go to state 522
    '?'     shift, and go to state 523
    '|'     shift, and go to state 524
    '^'     shift, and go to state 525
    '&'     shift, and go to state 526
    '<'     shift, and go to state 527
    '>'     shift, and go to state 528
    '-'     shift, and go to state 529
    '+'     shift, and go to state 530
    '*'     shift, and go to state 531
    '/'     shift, and go to state 532
    '%'     shift, and go to state 533
    '.'     shift, and go to state 534
    '['     shift, and go to state 535

    $default  reduce using rule 58 (expression_else_one_liner)

    expression_else_one_liner  go to state 1092


State 1032

  308 expr_assign_pipe: expr "<-" "@ <|" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 308 (expr_assign_pipe)


State 1033

  309 expr_assign_pipe: expr "<-" "@@ <|" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 309 (expr_assign_pipe)]
    "--"      [reduce using rule 309 (expr_assign_pipe)]
    '-'       [reduce using rule 309 (expr_assign_pipe)]
    '+'       [reduce using rule 309 (expr_assign_pipe)]
    '*'       [reduce using rule 309 (expr_assign_pipe)]
    '%'       [reduce using rule 309 (expr_assign_pipe)]
    $default  reduce using rule 309 (expr_assign_pipe)


State 1034

  306 expr_assign_pipe: expr '=' "@ <|" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '/'    shift, and go to state 532
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 306 (expr_assign_pipe)


State 1035

  307 expr_assign_pipe: expr '=' "@@ <|" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    "++"      [reduce using rule 307 (expr_assign_pipe)]
    "--"      [reduce using rule 307 (expr_assign_pipe)]
    '-'       [reduce using rule 307 (expr_assign_pipe)]
    '+'       [reduce using rule 307 (expr_assign_pipe)]
    '*'       [reduce using rule 307 (expr_assign_pipe)]
    '%'       [reduce using rule 307 (expr_assign_pipe)]
    $default  reduce using rule 307 (expr_assign_pipe)


State 1036

  104 optional_annotation_list: '[' annotation_list ']' .
  445 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1093

    $default  reduce using rule 104 (optional_annotation_list)


State 1037

  435 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 435 (optional_public_or_private_member_variable)


State 1038

  436 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 436 (optional_public_or_private_member_variable)


State 1039

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" $@27 function_declaration_header ';'
  444                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_override optional_constant $@28 function_declaration_header expression_block

    "override"  shift, and go to state 1040
    "abstract"  shift, and go to state 1094
    "sealed"    shift, and go to state 1041

    $default  reduce using rule 429 (optional_override)

    optional_override  go to state 1095


State 1040

  430 optional_override: "override" .

    $default  reduce using rule 430 (optional_override)


State 1041

  431 optional_override: "sealed" .

    $default  reduce using rule 431 (optional_override)


State 1042

  437 structure_variable_declaration: optional_field_annotation optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1037
    "private"  shift, and go to state 1038

    $default  reduce using rule 434 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1096


State 1043

  440 struct_variable_declaration_list: struct_variable_declaration_list $@26 structure_variable_declaration ';' .

    $default  reduce using rule 440 (struct_variable_declaration_list)


State 1044

  477 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';' .

    $default  reduce using rule 477 (let_variable_declaration)


State 1045

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1097
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1046

  262 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1098


State 1047

  259 expr_type_decl: "type" '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 259 (expr_type_decl)


State 1048

  250 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1099
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1049

  253 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1100
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1050

  256 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1101
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1051

  382 expr: "generator" '<' type_declaration '>' optional_capture_list '(' . ')'
  383     | "generator" '<' type_declaration '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    ')'                               shift, and go to state 1102
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1103
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1052

  417 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 417 (expr_mtag)


State 1053

  264 expr_list: expr_list . ',' expr
  418 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 1104


State 1054

  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1105
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1055

  644 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 1106


State 1056

  643 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' . ']'

    ']'  shift, and go to state 1107


State 1057

  636 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1108
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1058

  635 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1109
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1059

  641 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 641 (make_struct_decl)


State 1060

  663 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1110
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1061

  646 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 1111


State 1062

  645 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 645 (make_struct_decl)


State 1063

  314 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 314 (func_addr_name)


State 1064

  426 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 426 (expr_mtag)


State 1065

  318 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' . $@15 func_addr_name

    $default  reduce using rule 317 ($@15)

    $@15  go to state 1112


State 1066

  321 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type . '>' $@17 func_addr_name

    '>'  shift, and go to state 1113


State 1067

  310 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 310 (expr_named_call)


State 1068

  276 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 276 (capture_list)


State 1069

  278 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 278 (optional_capture_list)


State 1070

  266 block_or_simple_block: "=>" . expr
  267                      | "=>" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1114
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1115
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1071

  265 block_or_simple_block: expression_block .

    $default  reduce using rule 265 (block_or_simple_block)


State 1072

  280 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 280 (expr_block)


State 1073

  388 expr: expr "is" "type" '<' $@20 type_declaration . '>' $@21
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1116
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1074

  425 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 425 (expr_mtag)


State 1075

  394 expr: expr "as" "type" '<' $@22 type_declaration . '>' $@23
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1117
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1076

  423 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 423 (expr_mtag)


State 1077

  312 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 312 (expr_method_call)


State 1078

  420 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 420 (expr_mtag)


State 1079

  399 expr: expr '?' "as" "type" '<' $@24 . type_declaration '>' $@25

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace           go to state 177
    basic_type_declaration      go to state 178
    structure_type_declaration  go to state 179
    auto_type_declaration       go to state 180
    bitfield_type_declaration   go to state 181
    type_declaration            go to state 1118


State 1080

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  424          | expr '?' "as" "$f" '(' expr . ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1119


State 1081

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  422          | expr '.' "?." "$f" '(' expr . ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1120


State 1082

  419 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 419 (expr_mtag)


State 1083

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  421          | expr '.' '.' "$f" '(' expr . ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1121


State 1084

  524 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 524 (variable_name_with_pos_list)


State 1085

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  463 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 463 (variable_declaration)


State 1086

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1122


State 1087

   74 expression_with_alias: "assume" "name" '=' $@4 expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 74 (expression_with_alias)


State 1088

  195 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 195 (expression_block)


State 1089

   54 expression_else: "else" expression_block .

    $default  reduce using rule 54 (expression_else)


State 1090

   55 expression_else: elif_or_static_elif expr . expression_block expression_else
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    '{'    shift, and go to state 311

    expression_block  go to state 1123


State 1091

   60 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 59 ($@2)

    $@2  go to state 1124


State 1092

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1125


State 1093

  445 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 445 (struct_variable_declaration_list)


State 1094

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . $@27 function_declaration_header ';'

    $default  reduce using rule 441 ($@27)

    $@27  go to state 1126


State 1095

  444 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override . optional_constant $@28 function_declaration_header expression_block

    "const"  shift, and go to state 1127

    $default  reduce using rule 432 (optional_constant)

    optional_constant  go to state 1128


State 1096

  437 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 545
    "name"  shift, and go to state 546

    variable_declaration         go to state 1129
    variable_name_with_pos_list  go to state 548


State 1097

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1130


State 1098

  262 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1131


State 1099

  250 expr_cast: "cast" '<' $@6 type_declaration '>' $@7 expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 250 (expr_cast)


State 1100

  253 expr_cast: "upcast" '<' $@8 type_declaration '>' $@9 expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 253 (expr_cast)


State 1101

  256 expr_cast: "reinterpret" '<' $@10 type_declaration '>' $@11 expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 256 (expr_cast)


State 1102

  382 expr: "generator" '<' type_declaration '>' optional_capture_list '(' ')' .

    $default  reduce using rule 382 (expr)


State 1103

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  383     | "generator" '<' type_declaration '>' optional_capture_list '(' expr . ')'
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1132


State 1104

  418 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 418 (expr_mtag)


State 1105

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1133

    $default  reduce using rule 660 (array_comprehension_where)

    array_comprehension_where  go to state 1134


State 1106

  644 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1135


State 1107

  643 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' ']' .

    $default  reduce using rule 643 (make_struct_decl)


State 1108

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  636 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 636 (make_struct_fields)


State 1109

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  635 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 635 (make_struct_fields)


State 1110

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  663 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ';'    shift, and go to state 1133

    $default  reduce using rule 660 (array_comprehension_where)

    array_comprehension_where  go to state 1136


State 1111

  646 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1137


State 1112

  318 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 672
    "name"  shift, and go to state 51

    name_in_namespace  go to state 675
    func_addr_name     go to state 1138


State 1113

  321 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' . $@17 func_addr_name

    $default  reduce using rule 320 ($@17)

    $@17  go to state 1139


State 1114

  267 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1140
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1115

  266 block_or_simple_block: "=>" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    ".."  error (nonassociative)

    $default  reduce using rule 266 (block_or_simple_block)


State 1116

  388 expr: expr "is" "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 387 ($@21)

    $@21  go to state 1141


State 1117

  394 expr: expr "as" "type" '<' $@22 type_declaration '>' . $@23

    $default  reduce using rule 393 ($@23)

    $@23  go to state 1142


State 1118

  399 expr: expr '?' "as" "type" '<' $@24 type_declaration . '>' $@25
  571 type_declaration: type_declaration . '[' expr ']'
  572                 | type_declaration . '[' ']'
  573                 | type_declaration . '-' '[' ']'
  574                 | type_declaration . "explicit"
  575                 | type_declaration . "const"
  576                 | type_declaration . '-' "const"
  577                 | type_declaration . '&'
  578                 | type_declaration . '-' '&'
  579                 | type_declaration . '#'
  580                 | type_declaration . "implicit"
  581                 | type_declaration . '-' '#'
  582                 | type_declaration . '=' "const"
  583                 | type_declaration . '?'
  587                 | type_declaration . "??"

    "const"     shift, and go to state 242
    "implicit"  shift, and go to state 243
    "explicit"  shift, and go to state 244
    "??"        shift, and go to state 245
    '='         shift, and go to state 246
    '?'         shift, and go to state 247
    '&'         shift, and go to state 248
    '>'         shift, and go to state 1143
    '-'         shift, and go to state 249
    '['         shift, and go to state 250
    '#'         shift, and go to state 251


State 1119

  424 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 424 (expr_mtag)


State 1120

  422 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 422 (expr_mtag)


State 1121

  421 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 421 (expr_mtag)


State 1122

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 69 (expression_for_loop)


State 1123

   55 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1026
    "elif"         shift, and go to state 1027
    "static_elif"  shift, and go to state 1028

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1029
    expression_else      go to state 1144


State 1124

   60 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "return"                          shift, and go to state 1145
    "null"                            shift, and go to state 350
    "break"                           shift, and go to state 558
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "continue"                        shift, and go to state 563
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "yield"                           shift, and go to state 1146
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder             go to state 386
    expr_reader                go to state 387
    expression_if_one_liner    go to state 1147
    expression_block           go to state 388
    name_in_namespace          go to state 389
    expr_new                   go to state 390
    expression_break           go to state 1148
    expression_continue        go to state 1149
    expression_return_no_pipe  go to state 1150
    expression_yield_no_pipe   go to state 1151
    expr_cast                  go to state 391
    expr_type_decl             go to state 392
    expr_type_info             go to state 393
    block_or_lambda            go to state 394
    expr_block                 go to state 395
    expr_numeric_const         go to state 396
    expr_named_call            go to state 397
    expr_method_call           go to state 398
    func_addr_expr             go to state 399
    expr_field                 go to state 400
    expr                       go to state 1152
    expr_mtag                  go to state 402
    basic_type_declaration     go to state 403
    make_decl                  go to state 404
    make_struct_decl           go to state 405
    make_dim_decl              go to state 406
    make_table_decl            go to state 407
    array_comprehension        go to state 408


State 1125

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 68 (expression_if_then_else)


State 1126

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 . function_declaration_header ';'

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1153


State 1127

  433 optional_constant: "const" .

    $default  reduce using rule 433 (optional_constant)


State 1128

  444 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant . $@28 function_declaration_header expression_block

    $default  reduce using rule 443 ($@28)

    $@28  go to state 1154


State 1129

  437 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 437 (structure_variable_declaration)


State 1130

  261 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 261 (expr_type_info)


State 1131

  262 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1155
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1132

  383 expr: "generator" '<' type_declaration '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 383 (expr)


State 1133

  661 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1156


State 1134

  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1157


State 1135

  644 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 644 (make_struct_decl)


State 1136

  663 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1158


State 1137

  646 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 646 (make_struct_decl)


State 1138

  318 func_addr_expr: '@' '@' '<' $@14 type_declaration '>' $@15 func_addr_name .

    $default  reduce using rule 318 (func_addr_expr)


State 1139

  321 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 672
    "name"  shift, and go to state 51

    name_in_namespace  go to state 675
    func_addr_name     go to state 1159


State 1140

  267 block_or_simple_block: "=>" "<-" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 267 (block_or_simple_block)


State 1141

  388 expr: expr "is" "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 388 (expr)


State 1142

  394 expr: expr "as" "type" '<' $@22 type_declaration '>' $@23 .

    $default  reduce using rule 394 (expr)


State 1143

  399 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' . $@25

    $default  reduce using rule 398 ($@25)

    $@25  go to state 1160


State 1144

   55 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 55 (expression_else)


State 1145

  233 expression_return_no_pipe: "return" .
  234                          | "return" . expr
  235                          | "return" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1161
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    $default  reduce using rule 233 (expression_return_no_pipe)

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1162
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1146

  239 expression_yield_no_pipe: "yield" . expr
  240                         | "yield" . "<-" expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "<-"                              shift, and go to state 1163
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1164
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1147

   60 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 60 (expression_else_one_liner)


State 1148

   64 expression_if_one_liner: expression_break .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1149

   65 expression_if_one_liner: expression_continue .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1150

   62 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 62 (expression_if_one_liner)


State 1151

   63 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 63 (expression_if_one_liner)


State 1152

   61 expression_if_one_liner: expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 61 (expression_if_one_liner)


State 1153

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header . ';'

    ';'  shift, and go to state 1165


State 1154

  444 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 . function_declaration_header expression_block

    "operator"  shift, and go to state 188
    "bool"      shift, and go to state 189
    "string"    shift, and go to state 190
    "int"       shift, and go to state 191
    "int2"      shift, and go to state 192
    "int3"      shift, and go to state 193
    "int4"      shift, and go to state 194
    "uint"      shift, and go to state 195
    "uint2"     shift, and go to state 196
    "uint3"     shift, and go to state 197
    "uint4"     shift, and go to state 198
    "float"     shift, and go to state 199
    "float2"    shift, and go to state 200
    "float3"    shift, and go to state 201
    "float4"    shift, and go to state 202
    "range"     shift, and go to state 203
    "urange"    shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1166


State 1155

  262 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535
    ')'    shift, and go to state 1167


State 1156

  661 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1168
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1157

  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1169


State 1158

  663 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1170


State 1159

  321 func_addr_expr: '@' '@' '<' $@16 optional_function_argument_list optional_function_type '>' $@17 func_addr_name .

    $default  reduce using rule 321 (func_addr_expr)


State 1160

  399 expr: expr '?' "as" "type" '<' $@24 type_declaration '>' $@25 .

    $default  reduce using rule 399 (expr)


State 1161

  235 expression_return_no_pipe: "return" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1171
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1162

  234 expression_return_no_pipe: "return" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 234 (expression_return_no_pipe)


State 1163

  240 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 345
    "false"                           shift, and go to state 346
    "new"                             shift, and go to state 347
    "typeinfo"                        shift, and go to state 348
    "type"                            shift, and go to state 349
    "null"                            shift, and go to state 350
    "deref"                           shift, and go to state 351
    "cast"                            shift, and go to state 352
    "upcast"                          shift, and go to state 353
    "addr"                            shift, and go to state 354
    "reinterpret"                     shift, and go to state 355
    "unsafe"                          shift, and go to state 356
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 357
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 358
    "++"                              shift, and go to state 359
    "--"                              shift, and go to state 360
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 361
    "$i"                              shift, and go to state 362
    "$v"                              shift, and go to state 363
    "$b"                              shift, and go to state 364
    "$a"                              shift, and go to state 365
    "$c"                              shift, and go to state 366
    "[["                              shift, and go to state 367
    "[{"                              shift, and go to state 368
    "{{"                              shift, and go to state 369
    "integer constant"                shift, and go to state 370
    "long integer constant"           shift, and go to state 371
    "unsigned integer constant"       shift, and go to state 372
    "unsigned long integer constant"  shift, and go to state 373
    "floating point constant"         shift, and go to state 374
    "double constant"                 shift, and go to state 375
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 376
    '-'                               shift, and go to state 377
    '+'                               shift, and go to state 378
    '*'                               shift, and go to state 379
    '%'                               shift, and go to state 380
    '~'                               shift, and go to state 381
    '!'                               shift, and go to state 382
    '('                               shift, and go to state 383
    '$'                               shift, and go to state 384
    '@'                               shift, and go to state 385
    '{'                               shift, and go to state 311

    string_builder          go to state 386
    expr_reader             go to state 387
    expression_block        go to state 388
    name_in_namespace       go to state 389
    expr_new                go to state 390
    expr_cast               go to state 391
    expr_type_decl          go to state 392
    expr_type_info          go to state 393
    block_or_lambda         go to state 394
    expr_block              go to state 395
    expr_numeric_const      go to state 396
    expr_named_call         go to state 397
    expr_method_call        go to state 398
    func_addr_expr          go to state 399
    expr_field              go to state 400
    expr                    go to state 1172
    expr_mtag               go to state 402
    basic_type_declaration  go to state 403
    make_decl               go to state 404
    make_struct_decl        go to state 405
    make_dim_decl           go to state 406
    make_table_decl         go to state 407
    array_comprehension     go to state 408


State 1164

  239 expression_yield_no_pipe: "yield" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 239 (expression_yield_no_pipe)


State 1165

  442 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@27 function_declaration_header ';' .

    $default  reduce using rule 442 (struct_variable_declaration_list)


State 1166

  444 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header . expression_block

    '{'  shift, and go to state 311

    expression_block  go to state 1173


State 1167

  262 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 262 (expr_type_info)


State 1168

  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'
  661 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 661 (array_comprehension_where)


State 1169

  662 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 662 (array_comprehension)


State 1170

  663 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 663 (array_comprehension)


State 1171

  235 expression_return_no_pipe: "return" "<-" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 235 (expression_return_no_pipe)


State 1172

  240 expression_yield_no_pipe: "yield" "<-" expr .
  311 expr_method_call: expr . "->" "name" '(' ')'
  312                 | expr . "->" "name" '(' expr_list ')'
  322 expr_field: expr . '.' "name"
  323           | expr . '.' '.' "name"
  326           | expr . '.' $@18 error $@19
  341 expr: expr . "<<" expr
  342     | expr . ">>" expr
  343     | expr . "<<<" expr
  344     | expr . ">>>" expr
  345     | expr . '+' expr
  346     | expr . '-' expr
  347     | expr . '*' expr
  348     | expr . '/' expr
  349     | expr . '%' expr
  350     | expr . '<' expr
  351     | expr . '>' expr
  352     | expr . "==" expr
  353     | expr . "!=" expr
  354     | expr . "<=" expr
  355     | expr . ">=" expr
  356     | expr . '&' expr
  357     | expr . '|' expr
  358     | expr . '^' expr
  359     | expr . "&&" expr
  360     | expr . "||" expr
  361     | expr . "^^" expr
  362     | expr . ".." expr
  365     | expr . "++"
  366     | expr . "--"
  368     | expr . '[' expr ']'
  369     | expr . '.' '[' expr ']'
  370     | expr . "?[" expr ']'
  371     | expr . '.' "?[" expr ']'
  372     | expr . "?." "name"
  373     | expr . '.' "?." "name"
  384     | expr . "??" expr
  385     | expr . '?' expr ':' expr
  388     | expr . "is" "type" '<' $@20 type_declaration '>' $@21
  389     | expr . "is" basic_type_declaration
  390     | expr . "is" "name"
  391     | expr . "as" "name"
  394     | expr . "as" "type" '<' $@22 type_declaration '>' $@23
  395     | expr . "as" basic_type_declaration
  396     | expr . '?' "as" "name"
  399     | expr . '?' "as" "type" '<' $@24 type_declaration '>' $@25
  400     | expr . '?' "as" basic_type_declaration
  408     | expr . "<|" expr
  409     | expr . "|>" expr
  419 expr_mtag: expr . '.' "$f" '(' expr ')'
  420          | expr . "?." "$f" '(' expr ')'
  421          | expr . '.' '.' "$f" '(' expr ')'
  422          | expr . '.' "?." "$f" '(' expr ')'
  423          | expr . "as" "$f" '(' expr ')'
  424          | expr . '?' "as" "$f" '(' expr ')'
  425          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 501
    "as"   shift, and go to state 502
    "<<"   shift, and go to state 503
    ">>"   shift, and go to state 504
    "++"   shift, and go to state 505
    "--"   shift, and go to state 506
    "<="   shift, and go to state 507
    ">="   shift, and go to state 508
    "=="   shift, and go to state 509
    "!="   shift, and go to state 510
    "->"   shift, and go to state 511
    "??"   shift, and go to state 512
    "?."   shift, and go to state 513
    "?["   shift, and go to state 514
    "<|"   shift, and go to state 515
    "|>"   shift, and go to state 516
    "<<<"  shift, and go to state 517
    ">>>"  shift, and go to state 518
    "&&"   shift, and go to state 519
    "||"   shift, and go to state 520
    "^^"   shift, and go to state 521
    ".."   shift, and go to state 522
    '?'    shift, and go to state 523
    '|'    shift, and go to state 524
    '^'    shift, and go to state 525
    '&'    shift, and go to state 526
    '<'    shift, and go to state 527
    '>'    shift, and go to state 528
    '-'    shift, and go to state 529
    '+'    shift, and go to state 530
    '*'    shift, and go to state 531
    '/'    shift, and go to state 532
    '%'    shift, and go to state 533
    '.'    shift, and go to state 534
    '['    shift, and go to state 535

    $default  reduce using rule 240 (expression_yield_no_pipe)


State 1173

  444 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@28 function_declaration_header expression_block .

    $default  reduce using rule 444 (struct_variable_declaration_list)
